{"ast":null,"code":"import { Axes as e, Grid as t, renderGridLinesToCanvas as a, renderAxesToCanvas as i } from \"@nivo/axes\";\nimport { useTheme as n, getPropertyAccessor as l, usePropertyAccessor as r, useValueFormatter as o, Container as d, useMotionConfig as u, useDimensions as c, bindDefs as s, CartesianMarkers as h, SvgWrapper as f, getRelativeCursor as b, isCursorInRect as v, ResponsiveWrapper as g } from \"@nivo/core\";\nimport { animated as m, to as p, useTransition as x } from \"@react-spring/web\";\nimport { useMemo as y, createElement as S, useCallback as k, useState as w, Fragment as L, forwardRef as C, useRef as V, useEffect as M } from \"react\";\nimport { useAnnotations as W, Annotation as T, useComputedAnnotations as B, renderAnnotationsToCanvas as O } from \"@nivo/annotations\";\nimport { jsx as I, Fragment as P, jsxs as E } from \"react/jsx-runtime\";\nimport { BoxLegendSvg as H, renderLegendToCanvas as R } from \"@nivo/legends\";\nimport { useOrdinalColorScale as F, useInheritedColor as D } from \"@nivo/colors\";\nimport { useTooltip as A, BasicTooltip as X } from \"@nivo/tooltip\";\nimport { computeScale as Y } from \"@nivo/scales\";\nimport { stack as G, stackOffsetDiverging as z } from \"d3-shape\";\nimport N from \"lodash/uniqBy\";\nfunction j() {\n  return j = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var a = arguments[t];\n      for (var i in a) Object.prototype.hasOwnProperty.call(a, i) && (e[i] = a[i]);\n    }\n    return e;\n  }, j.apply(this, arguments);\n}\nfunction q(e, t) {\n  if (null == e) return {};\n  var a,\n    i,\n    n = {},\n    l = Object.keys(e);\n  for (i = 0; i < l.length; i++) a = l[i], t.indexOf(a) >= 0 || (n[a] = e[a]);\n  return n;\n}\nvar K,\n  _ = function (e) {\n    var t = e.bars,\n      a = e.annotations,\n      i = W({\n        data: t,\n        annotations: a,\n        getPosition: function (e) {\n          return {\n            x: e.x + e.width / 2,\n            y: e.y + e.height / 2\n          };\n        },\n        getDimensions: function (e) {\n          var t = e.height,\n            a = e.width;\n          return {\n            width: a,\n            height: t,\n            size: Math.max(a, t)\n          };\n        }\n      });\n    return I(P, {\n      children: i.map(function (e, t) {\n        return I(T, j({}, e), t);\n      })\n    });\n  },\n  J = function (e) {\n    var t = e.width,\n      a = e.height,\n      i = e.legends,\n      n = e.toggleSerie;\n    return I(P, {\n      children: i.map(function (e, i) {\n        var l,\n          r = e[0],\n          o = e[1];\n        return I(H, j({}, r, {\n          containerWidth: t,\n          containerHeight: a,\n          data: null != (l = r.data) ? l : o,\n          toggleSerie: r.toggleSerie && \"keys\" === r.dataFrom ? n : void 0\n        }), i);\n      })\n    });\n  },\n  Q = [\"data\"],\n  U = function (e) {\n    var t,\n      a = e.bar,\n      i = a.data,\n      l = q(a, Q),\n      r = e.style,\n      o = r.borderColor,\n      d = r.color,\n      u = r.height,\n      c = r.labelColor,\n      s = r.labelOpacity,\n      h = r.labelX,\n      f = r.labelY,\n      b = r.transform,\n      v = r.width,\n      g = r.textAnchor,\n      x = e.borderRadius,\n      w = e.borderWidth,\n      L = e.label,\n      C = e.shouldRenderLabel,\n      V = e.isInteractive,\n      M = e.onClick,\n      W = e.onMouseEnter,\n      T = e.onMouseLeave,\n      B = e.tooltip,\n      O = e.isFocusable,\n      P = e.ariaLabel,\n      H = e.ariaLabelledBy,\n      R = e.ariaDescribedBy,\n      F = e.ariaDisabled,\n      D = e.ariaHidden,\n      X = n(),\n      Y = A(),\n      G = Y.showTooltipFromEvent,\n      z = Y.showTooltipAt,\n      N = Y.hideTooltip,\n      K = y(function () {\n        return function () {\n          return S(B, j({}, l, i));\n        };\n      }, [B, l, i]),\n      _ = k(function (e) {\n        null == M || M(j({\n          color: l.color\n        }, i), e);\n      }, [l, i, M]),\n      J = k(function (e) {\n        return G(K(), e);\n      }, [G, K]),\n      U = k(function (e) {\n        null == W || W(i, e), G(K(), e);\n      }, [i, W, G, K]),\n      Z = k(function (e) {\n        null == T || T(i, e), N();\n      }, [i, N, T]),\n      $ = k(function () {\n        z(K(), [l.absX + l.width / 2, l.absY]);\n      }, [z, K, l]),\n      ee = k(function () {\n        N();\n      }, [N]);\n    return E(m.g, {\n      transform: b,\n      children: [I(m.rect, {\n        width: p(v, function (e) {\n          return Math.max(e, 0);\n        }),\n        height: p(u, function (e) {\n          return Math.max(e, 0);\n        }),\n        rx: x,\n        ry: x,\n        fill: null != (t = i.fill) ? t : d,\n        strokeWidth: w,\n        stroke: o,\n        focusable: O,\n        tabIndex: O ? 0 : void 0,\n        \"aria-label\": P ? P(i) : void 0,\n        \"aria-labelledby\": H ? H(i) : void 0,\n        \"aria-describedby\": R ? R(i) : void 0,\n        \"aria-disabled\": F ? F(i) : void 0,\n        \"aria-hidden\": D ? D(i) : void 0,\n        onMouseEnter: V ? U : void 0,\n        onMouseMove: V ? J : void 0,\n        onMouseLeave: V ? Z : void 0,\n        onClick: V ? _ : void 0,\n        onFocus: V && O ? $ : void 0,\n        onBlur: V && O ? ee : void 0\n      }), C && I(m.text, {\n        x: h,\n        y: f,\n        textAnchor: g,\n        dominantBaseline: \"central\",\n        fillOpacity: s,\n        style: j({}, X.labels.text, {\n          pointerEvents: \"none\",\n          fill: c\n        }),\n        children: L\n      })]\n    });\n  },\n  Z = [\"color\", \"label\"],\n  $ = function (e) {\n    var t = e.color,\n      a = e.label,\n      i = q(e, Z);\n    return I(X, {\n      id: a,\n      value: i.formattedValue,\n      enableChip: !0,\n      color: t\n    });\n  },\n  ee = {\n    indexBy: \"id\",\n    keys: [\"value\"],\n    groupMode: \"stacked\",\n    layout: \"vertical\",\n    reverse: !1,\n    minValue: \"auto\",\n    maxValue: \"auto\",\n    valueScale: {\n      type: \"linear\"\n    },\n    indexScale: {\n      type: \"band\",\n      round: !0\n    },\n    padding: .1,\n    innerPadding: 0,\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: !1,\n    enableGridY: !0,\n    enableLabel: !0,\n    label: \"formattedValue\",\n    labelPosition: \"middle\",\n    labelOffset: 0,\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: {\n      from: \"theme\",\n      theme: \"labels.text.fill\"\n    },\n    colorBy: \"id\",\n    colors: {\n      scheme: \"nivo\"\n    },\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: {\n      from: \"color\"\n    },\n    isInteractive: !0,\n    tooltip: $,\n    tooltipLabel: function (e) {\n      return e.id + \" - \" + e.indexValue;\n    },\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n    enableTotals: !1,\n    totalsOffset: 10\n  },\n  te = j({}, ee, {\n    layers: [\"grid\", \"axes\", \"bars\", \"totals\", \"markers\", \"legends\", \"annotations\"],\n    barComponent: U,\n    defs: [],\n    fill: [],\n    animate: !0,\n    motionConfig: \"default\",\n    role: \"img\",\n    isFocusable: !1\n  }),\n  ae = j({}, ee, {\n    layers: [\"grid\", \"axes\", \"bars\", \"totals\", \"legends\", \"annotations\"],\n    pixelRatio: \"undefined\" != typeof window && null != (K = window.devicePixelRatio) ? K : 1\n  }),\n  ie = function (e, t, a, i, n, l) {\n    return Y(i, {\n      all: e.map(t),\n      min: 0,\n      max: 0\n    }, n, l).padding(a);\n  },\n  ne = function (e, t) {\n    return e.map(function (e) {\n      return j({}, t.reduce(function (e, t) {\n        return e[t] = null, e;\n      }, {}), e);\n    });\n  },\n  le = function (e) {\n    return Object.keys(e).reduce(function (t, a) {\n      return e[a] && (t[a] = e[a]), t;\n    }, {});\n  },\n  re = function (e) {\n    return [e, Number(e)];\n  };\nfunction oe(e, t, a, i) {\n  return void 0 === e && (e = ee.layout), void 0 === t && (t = ee.reverse), void 0 === a && (a = ee.labelPosition), void 0 === i && (i = ee.labelOffset), function (n, l) {\n    var r = i * (t ? -1 : 1);\n    if (\"horizontal\" === e) {\n      var o = n / 2;\n      return \"start\" === a ? o = t ? n : 0 : \"end\" === a && (o = t ? 0 : n), {\n        labelX: o + r,\n        labelY: l / 2,\n        textAnchor: \"middle\" === a ? \"middle\" : t ? \"end\" : \"start\"\n      };\n    }\n    var d = l / 2;\n    return \"start\" === a ? d = t ? 0 : l : \"end\" === a && (d = t ? l : 0), {\n      labelX: n / 2,\n      labelY: d - r,\n      textAnchor: \"middle\"\n    };\n  };\n}\nvar de = [\"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"innerPadding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  ue = function (e, t) {\n    return e > t;\n  },\n  ce = function (e, t) {\n    return e < t;\n  },\n  se = function (e, t) {\n    return Array.from(\" \".repeat(t - e), function (t, a) {\n      return e + a;\n    });\n  },\n  he = function (e) {\n    return ue(e, 0) ? 0 : e;\n  },\n  fe = function (e, t, a, i) {\n    var n = e.data,\n      l = e.formatValue,\n      r = e.getColor,\n      o = e.getIndex,\n      d = e.getTooltipLabel,\n      u = e.innerPadding,\n      c = void 0 === u ? 0 : u,\n      s = e.keys,\n      h = e.xScale,\n      f = e.yScale,\n      b = e.margin,\n      v = a ? ce : ue,\n      g = n.map(le),\n      m = [];\n    return s.forEach(function (e, a) {\n      return se(0, h.domain().length).forEach(function (u) {\n        var s,\n          p,\n          x,\n          y = re(n[u][e]),\n          S = y[0],\n          k = y[1],\n          w = o(n[u]),\n          L = (null != (s = h(w)) ? s : 0) + t * a + c * a,\n          C = v(p = k, 0) ? null != (x = f(p)) ? x : 0 : i,\n          V = function (e, t) {\n            var a;\n            return v(e, 0) ? i - t : (null != (a = f(e)) ? a : 0) - i;\n          }(k, C),\n          M = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: l(k),\n            hidden: !1,\n            index: u,\n            indexValue: w,\n            data: g[u]\n          };\n        m.push({\n          key: e + \".\" + M.indexValue,\n          index: m.length,\n          data: M,\n          x: L,\n          y: C,\n          absX: b.left + L,\n          absY: b.top + C,\n          width: t,\n          height: V,\n          color: r(M),\n          label: d(M)\n        });\n      });\n    }), m;\n  },\n  be = function (e, t, a, i) {\n    var n = e.data,\n      l = e.formatValue,\n      r = e.getIndex,\n      o = e.getColor,\n      d = e.getTooltipLabel,\n      u = e.keys,\n      c = e.innerPadding,\n      s = void 0 === c ? 0 : c,\n      h = e.xScale,\n      f = e.yScale,\n      b = e.margin,\n      v = a ? ce : ue,\n      g = n.map(le),\n      m = [];\n    return u.forEach(function (e, a) {\n      return se(0, f.domain().length).forEach(function (u) {\n        var c,\n          p,\n          x,\n          y = re(n[u][e]),\n          S = y[0],\n          k = y[1],\n          w = r(n[u]),\n          L = v(p = k, 0) ? i : null != (x = h(p)) ? x : 0,\n          C = (null != (c = f(w)) ? c : 0) + t * a + s * a,\n          V = function (e, t) {\n            var a;\n            return v(e, 0) ? (null != (a = h(e)) ? a : 0) - i : i - t;\n          }(k, L),\n          M = {\n            id: e,\n            value: null === S ? S : k,\n            formattedValue: l(k),\n            hidden: !1,\n            index: u,\n            indexValue: w,\n            data: g[u]\n          };\n        m.push({\n          key: e + \".\" + M.indexValue,\n          index: m.length,\n          data: M,\n          x: L,\n          y: C,\n          absX: b.left + L,\n          absY: b.top + C,\n          width: V,\n          height: t,\n          color: o(M),\n          label: d(M)\n        });\n      });\n    }), m;\n  },\n  ve = function (e) {\n    var t,\n      a,\n      i = e.layout,\n      n = e.minValue,\n      l = e.maxValue,\n      r = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.innerPadding,\n      h = void 0 === s ? 0 : s,\n      f = e.valueScale,\n      b = e.indexScale,\n      v = e.hiddenIds,\n      g = void 0 === v ? [] : v,\n      m = q(e, de),\n      p = m.keys.filter(function (e) {\n        return !g.includes(e);\n      }),\n      x = ne(m.data, p),\n      y = \"vertical\" === i ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      S = y[0],\n      k = y[1],\n      w = y[2],\n      L = ie(x, m.getIndex, c, b, w, k),\n      C = j({\n        max: l,\n        min: n,\n        reverse: r\n      }, f),\n      V = \"auto\" === C.min ? he : function (e) {\n        return e;\n      },\n      M = x.reduce(function (e, t) {\n        return [].concat(e, p.map(function (e) {\n          return t[e];\n        }));\n      }, []).filter(Boolean),\n      W = V(Math.min.apply(Math, M)),\n      T = (a = Math.max.apply(Math, M), isFinite(a) ? a : 0),\n      B = Y(C, {\n        all: M,\n        min: W,\n        max: T\n      }, \"x\" === S ? o : d, S),\n      O = \"vertical\" === i ? [L, B] : [B, L],\n      I = O[0],\n      P = O[1],\n      E = (L.bandwidth() - h * (p.length - 1)) / p.length,\n      H = [j({}, m, {\n        data: x,\n        keys: p,\n        innerPadding: h,\n        xScale: I,\n        yScale: P\n      }), E, C.reverse, null != (t = B(0)) ? t : 0];\n    return {\n      xScale: I,\n      yScale: P,\n      bars: E > 0 ? \"vertical\" === i ? fe.apply(void 0, H) : be.apply(void 0, H) : []\n    };\n  },\n  ge = [\"data\", \"layout\", \"minValue\", \"maxValue\", \"reverse\", \"width\", \"height\", \"padding\", \"valueScale\", \"indexScale\", \"hiddenIds\"],\n  me = function e(t) {\n    var a;\n    return t.some(Array.isArray) ? e((a = []).concat.apply(a, t)) : t;\n  },\n  pe = function (e, t, a) {\n    var i = e.formatValue,\n      n = e.getColor,\n      l = e.getIndex,\n      r = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return u.domain().forEach(function (d, f) {\n        var b,\n          v,\n          g = e[f],\n          m = null != (b = u(l(g.data))) ? b : 0,\n          p = (null != (v = function (e) {\n            return c(e[a ? 0 : 1]);\n          }(g)) ? v : 0) + .5 * o,\n          x = function (e, t) {\n            var i;\n            return (null != (i = c(e[a ? 1 : 0])) ? i : 0) - t;\n          }(g, p) - o,\n          y = re(g.data[e.key]),\n          S = y[0],\n          k = y[1],\n          w = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: i(k),\n            hidden: !1,\n            index: f,\n            indexValue: d,\n            data: le(g.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: w,\n          x: m,\n          y: p,\n          absX: s.left + m,\n          absY: s.top + p,\n          width: t,\n          height: x,\n          color: n(w),\n          label: r(w)\n        });\n      });\n    }), h;\n  },\n  xe = function (e, t, a) {\n    var i = e.formatValue,\n      n = e.getColor,\n      l = e.getIndex,\n      r = e.getTooltipLabel,\n      o = e.innerPadding,\n      d = e.stackedData,\n      u = e.xScale,\n      c = e.yScale,\n      s = e.margin,\n      h = [];\n    return d.forEach(function (e) {\n      return c.domain().forEach(function (d, f) {\n        var b,\n          v,\n          g = e[f],\n          m = null != (b = c(l(g.data))) ? b : 0,\n          p = (null != (v = function (e) {\n            return u(e[a ? 1 : 0]);\n          }(g)) ? v : 0) + .5 * o,\n          x = function (e, t) {\n            var i;\n            return (null != (i = u(e[a ? 0 : 1])) ? i : 0) - t;\n          }(g, p) - o,\n          y = re(g.data[e.key]),\n          S = y[0],\n          k = y[1],\n          w = {\n            id: e.key,\n            value: null === S ? S : k,\n            formattedValue: i(k),\n            hidden: !1,\n            index: f,\n            indexValue: d,\n            data: le(g.data)\n          };\n        h.push({\n          key: e.key + \".\" + d,\n          index: h.length,\n          data: w,\n          x: p,\n          y: m,\n          absX: s.left + p,\n          absY: s.top + m,\n          width: x,\n          height: t,\n          color: n(w),\n          label: r(w)\n        });\n      });\n    }), h;\n  },\n  ye = function (e) {\n    var t,\n      a = e.data,\n      i = e.layout,\n      n = e.minValue,\n      l = e.maxValue,\n      r = e.reverse,\n      o = e.width,\n      d = e.height,\n      u = e.padding,\n      c = void 0 === u ? 0 : u,\n      s = e.valueScale,\n      h = e.indexScale,\n      f = e.hiddenIds,\n      b = void 0 === f ? [] : f,\n      v = q(e, ge),\n      g = v.keys.filter(function (e) {\n        return !b.includes(e);\n      }),\n      m = G().keys(g).offset(z)(ne(a, g)),\n      p = \"vertical\" === i ? [\"y\", \"x\", o] : [\"x\", \"y\", d],\n      x = p[0],\n      y = p[1],\n      S = p[2],\n      k = ie(a, v.getIndex, c, h, S, y),\n      w = j({\n        max: l,\n        min: n,\n        reverse: r\n      }, s),\n      L = (t = me(m), \"log\" === s.type ? t.filter(function (e) {\n        return 0 !== e;\n      }) : t),\n      C = Math.min.apply(Math, L),\n      V = Math.max.apply(Math, L),\n      M = Y(w, {\n        all: L,\n        min: C,\n        max: V\n      }, \"x\" === x ? o : d, x),\n      W = \"vertical\" === i ? [k, M] : [M, k],\n      T = W[0],\n      B = W[1],\n      O = v.innerPadding > 0 ? v.innerPadding : 0,\n      I = k.bandwidth(),\n      P = [j({}, v, {\n        innerPadding: O,\n        stackedData: m,\n        xScale: T,\n        yScale: B\n      }), I, w.reverse];\n    return {\n      xScale: T,\n      yScale: B,\n      bars: I > 0 ? \"vertical\" === i ? pe.apply(void 0, P) : xe.apply(void 0, P) : []\n    };\n  },\n  Se = function (e) {\n    var t = e.bars,\n      a = e.direction,\n      i = e.from,\n      n = e.groupMode,\n      r = e.layout,\n      o = e.legendLabel,\n      d = e.reverse,\n      u = l(null != o ? o : \"indexes\" === i ? \"indexValue\" : \"id\");\n    return \"indexes\" === i ? function (e, t, a) {\n      var i = N(e.map(function (e) {\n        var t, i;\n        return {\n          id: null != (t = e.data.indexValue) ? t : \"\",\n          label: a(e.data),\n          hidden: e.data.hidden,\n          color: null != (i = e.color) ? i : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return \"horizontal\" === t && i.reverse(), i;\n    }(t, r, u) : function (e, t, a, i, n, l) {\n      var r = N(e.map(function (e) {\n        var t;\n        return {\n          id: e.data.id,\n          label: l(e.data),\n          hidden: e.data.hidden,\n          color: null != (t = e.color) ? t : \"#000\"\n        };\n      }), function (e) {\n        return e.id;\n      });\n      return (\"vertical\" === t && \"stacked\" === i && \"column\" === a && !0 !== n || \"horizontal\" === t && \"stacked\" === i && !0 === n) && r.reverse(), r;\n    }(t, r, a, n, d, u);\n  },\n  ke = function (e, t, a) {\n    var i = e.get(t) || 0;\n    e.set(t, i + a);\n  },\n  we = function (e, t, a) {\n    var i = e.get(t) || 0;\n    e.set(t, i + (a > 0 ? a : 0));\n  },\n  Le = function (e, t, a) {\n    var i = e.get(t) || 0;\n    e.set(t, Math.max(i, Number(a)));\n  },\n  Ce = function (e, t) {\n    var a = e.get(t) || 0;\n    e.set(t, a + 1);\n  },\n  Ve = function (e) {\n    var t = e.indexBy,\n      a = void 0 === t ? ee.indexBy : t,\n      i = e.keys,\n      l = void 0 === i ? ee.keys : i,\n      d = e.label,\n      u = void 0 === d ? ee.label : d,\n      c = e.tooltipLabel,\n      s = void 0 === c ? ee.tooltipLabel : c,\n      h = e.valueFormat,\n      f = e.colors,\n      b = void 0 === f ? ee.colors : f,\n      v = e.colorBy,\n      g = void 0 === v ? ee.colorBy : v,\n      m = e.borderColor,\n      p = void 0 === m ? ee.borderColor : m,\n      x = e.labelTextColor,\n      S = void 0 === x ? ee.labelTextColor : x,\n      L = e.groupMode,\n      C = void 0 === L ? ee.groupMode : L,\n      V = e.layout,\n      M = void 0 === V ? ee.layout : V,\n      W = e.reverse,\n      T = void 0 === W ? ee.reverse : W,\n      B = e.data,\n      O = e.minValue,\n      I = void 0 === O ? ee.minValue : O,\n      P = e.maxValue,\n      E = void 0 === P ? ee.maxValue : P,\n      H = e.margin,\n      R = e.width,\n      A = e.height,\n      X = e.padding,\n      Y = void 0 === X ? ee.padding : X,\n      G = e.innerPadding,\n      z = void 0 === G ? ee.innerPadding : G,\n      N = e.valueScale,\n      q = void 0 === N ? ee.valueScale : N,\n      K = e.indexScale,\n      _ = void 0 === K ? ee.indexScale : K,\n      J = e.initialHiddenIds,\n      Q = void 0 === J ? ee.initialHiddenIds : J,\n      U = e.enableLabel,\n      Z = void 0 === U ? ee.enableLabel : U,\n      $ = e.labelSkipWidth,\n      te = void 0 === $ ? ee.labelSkipWidth : $,\n      ae = e.labelSkipHeight,\n      ie = void 0 === ae ? ee.labelSkipHeight : ae,\n      ne = e.legends,\n      le = void 0 === ne ? ee.legends : ne,\n      re = e.legendLabel,\n      oe = e.totalsOffset,\n      de = void 0 === oe ? ee.totalsOffset : oe,\n      ue = w(null != Q ? Q : []),\n      ce = ue[0],\n      se = ue[1],\n      he = k(function (e) {\n        se(function (t) {\n          return t.indexOf(e) > -1 ? t.filter(function (t) {\n            return t !== e;\n          }) : [].concat(t, [e]);\n        });\n      }, []),\n      fe = r(a),\n      be = r(u),\n      ge = r(s),\n      me = o(h),\n      pe = n(),\n      xe = F(b, g),\n      Ve = D(p, pe),\n      Me = D(S, pe),\n      We = (\"grouped\" === C ? ve : ye)({\n        layout: M,\n        reverse: T,\n        data: B,\n        getIndex: fe,\n        keys: l,\n        minValue: I,\n        maxValue: E,\n        width: R,\n        height: A,\n        getColor: xe,\n        padding: Y,\n        innerPadding: z,\n        valueScale: q,\n        indexScale: _,\n        hiddenIds: ce,\n        formatValue: me,\n        getTooltipLabel: ge,\n        margin: H\n      }),\n      Te = We.bars,\n      Be = We.xScale,\n      Oe = We.yScale,\n      Ie = y(function () {\n        return Te.filter(function (e) {\n          return null !== e.data.value;\n        }).map(function (e, t) {\n          return j({}, e, {\n            index: t\n          });\n        });\n      }, [Te]),\n      Pe = k(function (e) {\n        var t = e.width,\n          a = e.height;\n        return !!Z && !(te > 0 && t < te) && !(ie > 0 && a < ie);\n      }, [Z, te, ie]),\n      Ee = y(function () {\n        return l.map(function (e) {\n          var t = Te.find(function (t) {\n            return t.data.id === e;\n          });\n          return j({}, t, {\n            data: j({\n              id: e\n            }, null == t ? void 0 : t.data, {\n              hidden: ce.includes(e)\n            })\n          });\n        });\n      }, [ce, l, Te]),\n      He = y(function () {\n        return le.map(function (e) {\n          return [e, Se({\n            bars: \"keys\" === e.dataFrom ? Ee : Te,\n            direction: e.direction,\n            from: e.dataFrom,\n            groupMode: C,\n            layout: M,\n            legendLabel: re,\n            reverse: T\n          })];\n        });\n      }, [le, Ee, Te, C, M, re, T]),\n      Re = y(function () {\n        return function (e, t, a, i, n, l, r) {\n          void 0 === i && (i = ee.layout), void 0 === n && (n = ee.groupMode);\n          var o = [];\n          if (0 === e.length) return o;\n          var d = new Map(),\n            u = e[0].width,\n            c = e[0].height;\n          if (\"stacked\" === n) {\n            var s = new Map();\n            e.forEach(function (e) {\n              var t = e.data,\n                a = t.indexValue,\n                i = t.value;\n              ke(d, a, Number(i)), we(s, a, Number(i));\n            }), s.forEach(function (e, n) {\n              var s,\n                h,\n                f,\n                b = d.get(n) || 0;\n              \"vertical\" === i ? (s = t(n), h = a(e), f = a(e / 2)) : (s = t(e), h = a(n), f = t(e / 2)), s += \"vertical\" === i ? u / 2 : l, h += \"vertical\" === i ? -l : c / 2, o.push({\n                key: \"total_\" + n,\n                x: s,\n                y: h,\n                value: b,\n                formattedValue: r(b),\n                animationOffset: f\n              });\n            });\n          } else if (\"grouped\" === n) {\n            var h = new Map(),\n              f = new Map();\n            e.forEach(function (e) {\n              var t = e.data,\n                a = t.indexValue,\n                i = t.value;\n              ke(d, a, Number(i)), Le(h, a, Number(i)), Ce(f, a);\n            }), h.forEach(function (e, n) {\n              var s,\n                h,\n                b,\n                v = d.get(n) || 0,\n                g = f.get(n);\n              \"vertical\" === i ? (s = t(n), h = a(e), b = a(e / 2)) : (s = t(e), h = a(n), b = t(e / 2)), s += \"vertical\" === i ? g * u / 2 : l, h += \"vertical\" === i ? -l : g * c / 2, o.push({\n                key: \"total_\" + n,\n                x: s,\n                y: h,\n                value: v,\n                formattedValue: r(v),\n                animationOffset: b\n              });\n            });\n          }\n          return o;\n        }(Te, Be, Oe, M, C, de, me);\n      }, [Te, Be, Oe, M, C, de, me]);\n    return {\n      bars: Te,\n      barsWithValue: Ie,\n      xScale: Be,\n      yScale: Oe,\n      getIndex: fe,\n      getLabel: be,\n      getTooltipLabel: ge,\n      formatValue: me,\n      getColor: xe,\n      getBorderColor: Ve,\n      getLabelColor: Me,\n      shouldRenderBarLabel: Pe,\n      hiddenIds: ce,\n      toggleSerie: he,\n      legendsWithData: He,\n      barTotals: Re\n    };\n  },\n  Me = function (e) {\n    var t = e.data,\n      a = e.springConfig,\n      i = e.animate,\n      l = e.layout,\n      r = void 0 === l ? te.layout : l,\n      o = n();\n    return x(t, {\n      keys: function (e) {\n        return e.key;\n      },\n      from: function (e) {\n        return {\n          x: \"vertical\" === r ? e.x : e.animationOffset,\n          y: \"vertical\" === r ? e.animationOffset : e.y,\n          labelOpacity: 0\n        };\n      },\n      enter: function (e) {\n        return {\n          x: e.x,\n          y: e.y,\n          labelOpacity: 1\n        };\n      },\n      update: function (e) {\n        return {\n          x: e.x,\n          y: e.y,\n          labelOpacity: 1\n        };\n      },\n      leave: function (e) {\n        return {\n          x: \"vertical\" === r ? e.x : e.animationOffset,\n          y: \"vertical\" === r ? e.animationOffset : e.y,\n          labelOpacity: 0\n        };\n      },\n      config: a,\n      immediate: !i,\n      initial: i ? void 0 : null\n    })(function (e, t) {\n      return I(m.text, {\n        x: e.x,\n        y: e.y,\n        fillOpacity: e.labelOpacity,\n        style: j({}, o.labels.text, {\n          pointerEvents: \"none\",\n          fill: o.text.fill\n        }),\n        fontWeight: \"bold\",\n        fontSize: o.labels.text.fontSize,\n        fontFamily: o.labels.text.fontFamily,\n        textAnchor: \"vertical\" === r ? \"middle\" : \"start\",\n        alignmentBaseline: \"vertical\" === r ? \"alphabetic\" : \"middle\",\n        children: t.formattedValue\n      }, t.key);\n    });\n  },\n  We = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  Te = function (a) {\n    var i = a.data,\n      n = a.indexBy,\n      l = a.keys,\n      r = a.margin,\n      o = a.width,\n      d = a.height,\n      b = a.groupMode,\n      v = a.layout,\n      g = a.reverse,\n      m = a.minValue,\n      p = a.maxValue,\n      k = a.valueScale,\n      w = a.indexScale,\n      C = a.padding,\n      V = a.innerPadding,\n      M = a.axisTop,\n      W = a.axisRight,\n      T = a.axisBottom,\n      B = void 0 === T ? te.axisBottom : T,\n      O = a.axisLeft,\n      P = void 0 === O ? te.axisLeft : O,\n      E = a.enableGridX,\n      H = void 0 === E ? te.enableGridX : E,\n      R = a.enableGridY,\n      F = void 0 === R ? te.enableGridY : R,\n      D = a.gridXValues,\n      A = a.gridYValues,\n      X = a.layers,\n      Y = void 0 === X ? te.layers : X,\n      G = a.barComponent,\n      z = void 0 === G ? te.barComponent : G,\n      N = a.enableLabel,\n      q = void 0 === N ? te.enableLabel : N,\n      K = a.label,\n      Q = a.labelSkipWidth,\n      U = void 0 === Q ? te.labelSkipWidth : Q,\n      Z = a.labelSkipHeight,\n      $ = void 0 === Z ? te.labelSkipHeight : Z,\n      ee = a.labelTextColor,\n      ae = a.labelPosition,\n      ie = void 0 === ae ? te.labelPosition : ae,\n      ne = a.labelOffset,\n      le = void 0 === ne ? te.labelOffset : ne,\n      re = a.markers,\n      de = void 0 === re ? te.markers : re,\n      ue = a.colorBy,\n      ce = a.colors,\n      se = a.defs,\n      he = void 0 === se ? te.defs : se,\n      fe = a.fill,\n      be = void 0 === fe ? te.fill : fe,\n      ve = a.borderRadius,\n      ge = void 0 === ve ? te.borderRadius : ve,\n      me = a.borderWidth,\n      pe = void 0 === me ? te.borderWidth : me,\n      xe = a.borderColor,\n      ye = a.annotations,\n      Se = void 0 === ye ? te.annotations : ye,\n      ke = a.legendLabel,\n      we = a.tooltipLabel,\n      Le = a.valueFormat,\n      Ce = a.isInteractive,\n      We = void 0 === Ce ? te.isInteractive : Ce,\n      Te = a.tooltip,\n      Be = void 0 === Te ? te.tooltip : Te,\n      Oe = a.onClick,\n      Ie = a.onMouseEnter,\n      Pe = a.onMouseLeave,\n      Ee = a.legends,\n      He = a.role,\n      Re = void 0 === He ? te.role : He,\n      Fe = a.ariaLabel,\n      De = a.ariaLabelledBy,\n      Ae = a.ariaDescribedBy,\n      Xe = a.isFocusable,\n      Ye = void 0 === Xe ? te.isFocusable : Xe,\n      Ge = a.barAriaLabel,\n      ze = a.barAriaLabelledBy,\n      Ne = a.barAriaDescribedBy,\n      je = a.barAriaHidden,\n      qe = a.barAriaDisabled,\n      Ke = a.initialHiddenIds,\n      _e = a.enableTotals,\n      Je = void 0 === _e ? te.enableTotals : _e,\n      Qe = a.totalsOffset,\n      Ue = void 0 === Qe ? te.totalsOffset : Qe,\n      Ze = u(),\n      $e = Ze.animate,\n      et = Ze.config,\n      tt = c(o, d, r),\n      at = tt.outerWidth,\n      it = tt.outerHeight,\n      nt = tt.margin,\n      lt = tt.innerWidth,\n      rt = tt.innerHeight,\n      ot = Ve({\n        indexBy: n,\n        label: K,\n        tooltipLabel: we,\n        valueFormat: Le,\n        colors: ce,\n        colorBy: ue,\n        borderColor: xe,\n        labelTextColor: ee,\n        groupMode: b,\n        layout: v,\n        reverse: g,\n        data: i,\n        keys: l,\n        minValue: m,\n        maxValue: p,\n        margin: nt,\n        width: lt,\n        height: rt,\n        padding: C,\n        innerPadding: V,\n        valueScale: k,\n        indexScale: w,\n        enableLabel: q,\n        labelSkipWidth: U,\n        labelSkipHeight: $,\n        legends: Ee,\n        legendLabel: ke,\n        initialHiddenIds: Ke,\n        totalsOffset: Ue\n      }),\n      dt = ot.bars,\n      ut = ot.barsWithValue,\n      ct = ot.xScale,\n      st = ot.yScale,\n      ht = ot.getLabel,\n      ft = ot.getTooltipLabel,\n      bt = ot.getBorderColor,\n      vt = ot.getLabelColor,\n      gt = ot.shouldRenderBarLabel,\n      mt = ot.toggleSerie,\n      pt = ot.legendsWithData,\n      xt = ot.barTotals,\n      yt = ot.getColor,\n      St = oe(v, g, ie, le),\n      kt = x(ut, {\n        keys: function (e) {\n          return e.key;\n        },\n        from: function (e) {\n          return j({\n            borderColor: bt(e),\n            color: e.color,\n            height: 0,\n            labelColor: vt(e),\n            labelOpacity: 0\n          }, St(e.width, e.height), {\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === v ? {} : {\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          });\n        },\n        enter: function (e) {\n          return j({\n            borderColor: bt(e),\n            color: e.color,\n            height: e.height,\n            labelColor: vt(e),\n            labelOpacity: 1\n          }, St(e.width, e.height), {\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          });\n        },\n        update: function (e) {\n          return j({\n            borderColor: bt(e),\n            color: e.color,\n            height: e.height,\n            labelColor: vt(e),\n            labelOpacity: 1\n          }, St(e.width, e.height), {\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: e.width\n          });\n        },\n        leave: function (e) {\n          return j({\n            borderColor: bt(e),\n            color: e.color,\n            height: 0,\n            labelColor: vt(e),\n            labelOpacity: 0\n          }, St(e.width, e.height), {\n            labelY: 0,\n            transform: \"translate(\" + e.x + \", \" + (e.y + e.height) + \")\",\n            width: e.width\n          }, \"vertical\" === v ? {} : j({}, St(e.width, e.height), {\n            labelX: 0,\n            height: e.height,\n            transform: \"translate(\" + e.x + \", \" + e.y + \")\",\n            width: 0\n          }));\n        },\n        config: et,\n        immediate: !$e,\n        initial: $e ? void 0 : null\n      }),\n      wt = y(function () {\n        return {\n          borderRadius: ge,\n          borderWidth: pe,\n          enableLabel: q,\n          isInteractive: We,\n          labelSkipWidth: U,\n          labelSkipHeight: $,\n          onClick: Oe,\n          onMouseEnter: Ie,\n          onMouseLeave: Pe,\n          getTooltipLabel: ft,\n          tooltip: Be,\n          isFocusable: Ye,\n          ariaLabel: Ge,\n          ariaLabelledBy: ze,\n          ariaDescribedBy: Ne,\n          ariaHidden: je,\n          ariaDisabled: qe\n        };\n      }, [ge, pe, q, ft, We, $, U, Oe, Ie, Pe, Be, Ye, Ge, ze, Ne, je, qe]),\n      Lt = s(he, dt, be, {\n        dataKey: \"data\",\n        targetKey: \"data.fill\"\n      }),\n      Ct = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n        totals: null\n      };\n    Y.includes(\"annotations\") && (Ct.annotations = I(_, {\n      bars: dt,\n      annotations: Se\n    }, \"annotations\")), Y.includes(\"axes\") && (Ct.axes = I(e, {\n      xScale: ct,\n      yScale: st,\n      width: lt,\n      height: rt,\n      top: M,\n      right: W,\n      bottom: B,\n      left: P\n    }, \"axes\")), Y.includes(\"bars\") && (Ct.bars = I(L, {\n      children: kt(function (e, t) {\n        return S(z, j({}, wt, {\n          bar: t,\n          style: e,\n          shouldRenderLabel: gt(t),\n          label: ht(t.data)\n        }));\n      })\n    }, \"bars\")), Y.includes(\"grid\") && (Ct.grid = I(t, {\n      width: lt,\n      height: rt,\n      xScale: H ? ct : null,\n      yScale: F ? st : null,\n      xValues: D,\n      yValues: A\n    }, \"grid\")), Y.includes(\"legends\") && (Ct.legends = I(J, {\n      width: lt,\n      height: rt,\n      legends: pt,\n      toggleSerie: mt\n    }, \"legends\")), Y.includes(\"markers\") && (Ct.markers = I(h, {\n      markers: de,\n      width: lt,\n      height: rt,\n      xScale: ct,\n      yScale: st\n    }, \"markers\")), Y.includes(\"totals\") && Je && (Ct.totals = I(Me, {\n      data: xt,\n      springConfig: et,\n      animate: $e,\n      layout: v\n    }, \"totals\"));\n    var Vt = y(function () {\n      return j({}, wt, {\n        margin: nt,\n        width: o,\n        height: d,\n        innerWidth: lt,\n        innerHeight: rt,\n        bars: dt,\n        legendData: pt,\n        enableLabel: q,\n        xScale: ct,\n        yScale: st,\n        tooltip: Be,\n        getTooltipLabel: ft,\n        onClick: Oe,\n        onMouseEnter: Ie,\n        onMouseLeave: Pe,\n        getColor: yt\n      });\n    }, [wt, nt, o, d, lt, rt, dt, pt, q, ct, st, Be, ft, Oe, Ie, Pe, yt]);\n    return I(f, {\n      width: at,\n      height: it,\n      margin: nt,\n      defs: Lt,\n      role: Re,\n      ariaLabel: Fe,\n      ariaLabelledBy: De,\n      ariaDescribedBy: Ae,\n      isFocusable: Ye,\n      children: Y.map(function (e, t) {\n        var a;\n        return \"function\" == typeof e ? I(L, {\n          children: S(e, Vt)\n        }, t) : null != (a = null == Ct ? void 0 : Ct[e]) ? a : null;\n      })\n    });\n  },\n  Be = function (e) {\n    var t = e.isInteractive,\n      a = void 0 === t ? te.isInteractive : t,\n      i = e.animate,\n      n = void 0 === i ? te.animate : i,\n      l = e.motionConfig,\n      r = void 0 === l ? te.motionConfig : l,\n      o = e.theme,\n      u = e.renderWrapper,\n      c = q(e, We);\n    return I(d, {\n      animate: n,\n      isInteractive: a,\n      motionConfig: r,\n      renderWrapper: u,\n      theme: o,\n      children: I(Te, j({\n        isInteractive: a\n      }, c))\n    });\n  },\n  Oe = [\"isInteractive\", \"renderWrapper\", \"theme\"],\n  Ie = function (e, t, a, i) {\n    return e.find(function (e) {\n      return v(e.x + t.left, e.y + t.top, e.width, e.height, a, i);\n    });\n  };\nvar Pe = function (e) {\n    var t = e.data,\n      l = e.indexBy,\n      r = e.keys,\n      d = e.margin,\n      u = e.width,\n      s = e.height,\n      h = e.groupMode,\n      f = e.layout,\n      v = e.reverse,\n      g = e.minValue,\n      m = e.maxValue,\n      p = e.valueScale,\n      x = e.indexScale,\n      w = e.padding,\n      L = e.innerPadding,\n      C = e.axisTop,\n      T = e.axisRight,\n      P = e.axisBottom,\n      E = void 0 === P ? ae.axisBottom : P,\n      H = e.axisLeft,\n      F = void 0 === H ? ae.axisLeft : H,\n      D = e.enableGridX,\n      X = void 0 === D ? ae.enableGridX : D,\n      Y = e.enableGridY,\n      G = void 0 === Y ? ae.enableGridY : Y,\n      z = e.gridXValues,\n      N = e.gridYValues,\n      q = e.labelPosition,\n      K = void 0 === q ? ae.labelPosition : q,\n      _ = e.labelOffset,\n      J = void 0 === _ ? ae.labelOffset : _,\n      Q = e.layers,\n      U = void 0 === Q ? ae.layers : Q,\n      Z = e.renderBar,\n      $ = void 0 === Z ? function (e, t) {\n        var a = t.bar,\n          i = a.color,\n          n = a.height,\n          l = a.width,\n          r = a.x,\n          o = a.y,\n          d = t.borderColor,\n          u = t.borderRadius,\n          c = t.borderWidth,\n          s = t.label,\n          h = t.labelColor,\n          f = t.shouldRenderLabel,\n          b = t.labelX,\n          v = t.labelY,\n          g = t.textAnchor;\n        if (e.fillStyle = i, c > 0 && (e.strokeStyle = d, e.lineWidth = c), e.beginPath(), u > 0) {\n          var m = Math.min(u, n);\n          e.moveTo(r + m, o), e.lineTo(r + l - m, o), e.quadraticCurveTo(r + l, o, r + l, o + m), e.lineTo(r + l, o + n - m), e.quadraticCurveTo(r + l, o + n, r + l - m, o + n), e.lineTo(r + m, o + n), e.quadraticCurveTo(r, o + n, r, o + n - m), e.lineTo(r, o + m), e.quadraticCurveTo(r, o, r + m, o), e.closePath();\n        } else e.rect(r, o, l, n);\n        e.fill(), c > 0 && e.stroke(), f && (e.textBaseline = \"middle\", e.textAlign = \"middle\" === g ? \"center\" : g, e.fillStyle = h, e.fillText(s, r + b, o + v));\n      } : Z,\n      ee = e.enableLabel,\n      te = void 0 === ee ? ae.enableLabel : ee,\n      ie = e.label,\n      ne = e.labelSkipWidth,\n      le = void 0 === ne ? ae.labelSkipWidth : ne,\n      re = e.labelSkipHeight,\n      de = void 0 === re ? ae.labelSkipHeight : re,\n      ue = e.labelTextColor,\n      ce = e.colorBy,\n      se = e.colors,\n      he = e.borderRadius,\n      fe = void 0 === he ? ae.borderRadius : he,\n      be = e.borderWidth,\n      ve = void 0 === be ? ae.borderWidth : be,\n      ge = e.borderColor,\n      me = e.annotations,\n      pe = void 0 === me ? ae.annotations : me,\n      xe = e.legendLabel,\n      ye = e.tooltipLabel,\n      Se = e.valueFormat,\n      ke = e.isInteractive,\n      we = void 0 === ke ? ae.isInteractive : ke,\n      Le = e.tooltip,\n      Ce = void 0 === Le ? ae.tooltip : Le,\n      Me = e.onClick,\n      We = e.onMouseEnter,\n      Te = e.onMouseLeave,\n      Be = e.legends,\n      Oe = e.pixelRatio,\n      Pe = void 0 === Oe ? ae.pixelRatio : Oe,\n      Ee = e.canvasRef,\n      He = e.enableTotals,\n      Re = void 0 === He ? ae.enableTotals : He,\n      Fe = e.totalsOffset,\n      De = void 0 === Fe ? ae.totalsOffset : Fe,\n      Ae = V(null),\n      Xe = n(),\n      Ye = c(u, s, d),\n      Ge = Ye.margin,\n      ze = Ye.innerWidth,\n      Ne = Ye.innerHeight,\n      je = Ye.outerWidth,\n      qe = Ye.outerHeight,\n      Ke = Ve({\n        indexBy: l,\n        label: ie,\n        tooltipLabel: ye,\n        valueFormat: Se,\n        colors: se,\n        colorBy: ce,\n        borderColor: ge,\n        labelTextColor: ue,\n        groupMode: h,\n        layout: f,\n        reverse: v,\n        data: t,\n        keys: r,\n        minValue: g,\n        maxValue: m,\n        margin: Ge,\n        width: ze,\n        height: Ne,\n        padding: w,\n        innerPadding: L,\n        valueScale: p,\n        indexScale: x,\n        enableLabel: te,\n        labelSkipWidth: le,\n        labelSkipHeight: de,\n        legends: Be,\n        legendLabel: xe,\n        totalsOffset: De\n      }),\n      _e = Ke.bars,\n      Je = Ke.barsWithValue,\n      Qe = Ke.xScale,\n      Ue = Ke.yScale,\n      Ze = Ke.getLabel,\n      $e = Ke.getTooltipLabel,\n      et = Ke.getBorderColor,\n      tt = Ke.getLabelColor,\n      at = Ke.shouldRenderBarLabel,\n      it = Ke.legendsWithData,\n      nt = Ke.barTotals,\n      lt = Ke.getColor,\n      rt = A(),\n      ot = rt.showTooltipFromEvent,\n      dt = rt.hideTooltip,\n      ut = B({\n        annotations: W({\n          data: _e,\n          annotations: pe,\n          getPosition: function (e) {\n            return {\n              x: e.x,\n              y: e.y\n            };\n          },\n          getDimensions: function (e) {\n            var t = e.width,\n              a = e.height;\n            return {\n              width: t,\n              height: a,\n              size: Math.max(t, a)\n            };\n          }\n        })\n      }),\n      ct = y(function () {\n        return {\n          borderRadius: fe,\n          borderWidth: ve,\n          isInteractive: we,\n          isFocusable: !1,\n          labelSkipWidth: le,\n          labelSkipHeight: de,\n          margin: Ge,\n          width: u,\n          height: s,\n          innerWidth: ze,\n          innerHeight: Ne,\n          bars: _e,\n          legendData: it,\n          enableLabel: te,\n          xScale: Qe,\n          yScale: Ue,\n          tooltip: Ce,\n          getTooltipLabel: $e,\n          onClick: Me,\n          onMouseEnter: We,\n          onMouseLeave: Te,\n          getColor: lt\n        };\n      }, [fe, ve, we, le, de, Ge, u, s, ze, Ne, _e, it, te, Qe, Ue, Ce, $e, Me, We, Te, lt]),\n      st = o(Se),\n      ht = oe(f, v, K, J);\n    M(function () {\n      var e,\n        t = null == (e = Ae.current) ? void 0 : e.getContext(\"2d\");\n      Ae.current && t && (Ae.current.width = je * Pe, Ae.current.height = qe * Pe, t.scale(Pe, Pe), t.fillStyle = Xe.background, t.fillRect(0, 0, je, qe), t.translate(Ge.left, Ge.top), U.forEach(function (e) {\n        \"grid\" === e ? \"number\" == typeof Xe.grid.line.strokeWidth && Xe.grid.line.strokeWidth > 0 && (t.lineWidth = Xe.grid.line.strokeWidth, t.strokeStyle = Xe.grid.line.stroke, X && a(t, {\n          width: ze,\n          height: Ne,\n          scale: Qe,\n          axis: \"x\",\n          values: z\n        }), G && a(t, {\n          width: ze,\n          height: Ne,\n          scale: Ue,\n          axis: \"y\",\n          values: N\n        })) : \"axes\" === e ? i(t, {\n          xScale: Qe,\n          yScale: Ue,\n          width: ze,\n          height: Ne,\n          top: C,\n          right: T,\n          bottom: E,\n          left: F,\n          theme: Xe\n        }) : \"bars\" === e ? Je.forEach(function (e) {\n          $(t, j({\n            bar: e,\n            borderColor: et(e),\n            borderRadius: fe,\n            borderWidth: ve,\n            label: Ze(e.data),\n            labelColor: tt(e),\n            shouldRenderLabel: at(e)\n          }, ht(e.width, e.height)));\n        }) : \"legends\" === e ? it.forEach(function (e) {\n          var a = e[0],\n            i = e[1];\n          R(t, j({}, a, {\n            data: i,\n            containerWidth: ze,\n            containerHeight: Ne,\n            theme: Xe\n          }));\n        }) : \"annotations\" === e ? O(t, {\n          annotations: ut,\n          theme: Xe\n        }) : \"totals\" === e && Re ? function (e, t, a, i) {\n          void 0 === i && (i = ae.layout), e.fillStyle = a.text.fill, e.font = \"bold \" + a.labels.text.fontSize + \"px \" + a.labels.text.fontFamily, e.textBaseline = \"vertical\" === i ? \"alphabetic\" : \"middle\", e.textAlign = \"vertical\" === i ? \"center\" : \"start\", t.forEach(function (t) {\n            e.fillText(t.formattedValue, t.x, t.y);\n          });\n        }(t, nt, Xe, f) : \"function\" == typeof e && e(t, ct);\n      }), t.save());\n    }, [E, F, T, C, Je, fe, ve, ut, X, G, et, Ze, tt, z, N, h, s, Ne, ze, ct, U, f, it, Ge.left, Ge.top, qe, je, Pe, $, Qe, Ue, v, at, Xe, u, nt, Re, st, ht]);\n    var ft = k(function (e) {\n        if (_e && Ae.current) {\n          var t = b(Ae.current, e),\n            a = t[0],\n            i = t[1],\n            n = Ie(_e, Ge, a, i);\n          void 0 !== n ? (ot(S(Ce, j({}, n.data, {\n            color: n.color,\n            label: n.label,\n            value: Number(n.data.value)\n          })), e), \"mouseenter\" === e.type && (null == We || We(n.data, e))) : dt();\n        }\n      }, [dt, Ge, We, _e, ot, Ce]),\n      bt = k(function (e) {\n        if (_e && Ae.current) {\n          dt();\n          var t = b(Ae.current, e),\n            a = t[0],\n            i = t[1],\n            n = Ie(_e, Ge, a, i);\n          n && (null == Te || Te(n.data, e));\n        }\n      }, [dt, Ge, Te, _e]),\n      vt = k(function (e) {\n        if (_e && Ae.current) {\n          var t = b(Ae.current, e),\n            a = t[0],\n            i = t[1],\n            n = Ie(_e, Ge, a, i);\n          void 0 !== n && (null == Me || Me(j({}, n.data, {\n            color: n.color\n          }), e));\n        }\n      }, [Ge, Me, _e]);\n    return I(\"canvas\", {\n      ref: function (e) {\n        Ae.current = e, Ee && \"current\" in Ee && (Ee.current = e);\n      },\n      width: je * Pe,\n      height: qe * Pe,\n      style: {\n        width: je,\n        height: qe,\n        cursor: we ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: we ? ft : void 0,\n      onMouseMove: we ? ft : void 0,\n      onMouseLeave: we ? bt : void 0,\n      onClick: we ? vt : void 0\n    });\n  },\n  Ee = C(function (e, t) {\n    var a = e.isInteractive,\n      i = e.renderWrapper,\n      n = e.theme,\n      l = q(e, Oe);\n    return I(d, {\n      isInteractive: a,\n      renderWrapper: i,\n      theme: n,\n      animate: !1,\n      children: I(Pe, j({}, l, {\n        canvasRef: t\n      }))\n    });\n  }),\n  He = function (e) {\n    return I(g, {\n      children: function (t) {\n        var a = t.width,\n          i = t.height;\n        return I(Be, j({\n          width: a,\n          height: i\n        }, e));\n      }\n    });\n  },\n  Re = C(function (e, t) {\n    return I(g, {\n      children: function (a) {\n        var i = a.width,\n          n = a.height;\n        return I(Ee, j({\n          width: i,\n          height: n\n        }, e, {\n          ref: t\n        }));\n      }\n    });\n  });\nexport { Be as Bar, Ee as BarCanvas, U as BarItem, $ as BarTooltip, Me as BarTotals, He as ResponsiveBar, Re as ResponsiveBarCanvas, ae as canvasDefaultProps, ee as defaultProps, te as svgDefaultProps };","map":{"version":3,"names":["K","_","BarAnnotations","e","t","bars","a","annotations","i","W","data","getPosition","x","width","y","height","getDimensions","size","Math","max","I","P","children","map","T","j","J","BarLegends","legends","n","toggleSerie","l","r","o","H","containerWidth","containerHeight","dataFrom","Q","U","BarItem","bar","q","style","borderColor","d","color","u","c","labelColor","s","labelOpacity","h","labelX","f","labelY","b","transform","v","g","textAnchor","borderRadius","w","borderWidth","L","label","C","shouldRenderLabel","V","isInteractive","M","onClick","onMouseEnter","onMouseLeave","B","tooltip","O","isFocusable","ariaLabel","ariaLabelledBy","R","ariaDescribedBy","F","ariaDisabled","D","ariaHidden","X","Y","A","G","showTooltipFromEvent","z","showTooltipAt","N","hideTooltip","S","k","Z","$","absX","absY","ee","E","m","rect","p","rx","ry","fill","strokeWidth","stroke","focusable","tabIndex","onMouseMove","onFocus","onBlur","text","dominantBaseline","fillOpacity","labels","pointerEvents","BarTooltip","id","value","formattedValue","enableChip","indexBy","keys","groupMode","layout","reverse","minValue","maxValue","valueScale","type","indexScale","round","padding","innerPadding","axisBottom","axisLeft","enableGridX","enableGridY","enableLabel","labelPosition","labelOffset","labelSkipWidth","labelSkipHeight","labelTextColor","from","theme","colorBy","colors","scheme","tooltipLabel","indexValue","initialHiddenIds","markers","enableTotals","totalsOffset","te","layers","barComponent","defs","animate","motionConfig","role","ae","pixelRatio","window","devicePixelRatio","ie","getIndexScale","all","min","ne","normalizeData","reduce","le","filterNullValues","Object","re","coerceValue","Number","oe","de","ue","gt","ce","lt","se","range","Array","repeat","he","clampToZero","fe","generateVerticalGroupedBars","formatValue","getColor","getIndex","getTooltipLabel","xScale","yScale","margin","forEach","domain","length","hidden","index","push","key","left","top","be","generateHorizontalGroupedBars","ve","generateGroupedBars","hiddenIds","filter","includes","concat","Boolean","apply","isFinite","bandwidth","ge","me","some","isArray","pe","generateVerticalStackedBars","stackedData","xe","generateHorizontalStackedBars","ye","generateStackedBars","offset","Se","getLegendData","direction","legendLabel","ke","updateTotalsByIndex","get","set","we","updateTotalsPositivesByIndex","Le","updateGreatestValueByIndex","Ce","updateNumberOfBarsByIndex","Ve","useBar","valueFormat","indexOf","Me","We","Te","Be","Oe","Ie","Pe","Ee","find","He","Re","Map","animationOffset","barsWithValue","getLabel","getBorderColor","getLabelColor","shouldRenderBarLabel","legendsWithData","barTotals","BarTotals","springConfig","enter","update","leave","config","immediate","initial","fontWeight","fontSize","fontFamily","alignmentBaseline","InnerBar","axisTop","axisRight","gridXValues","gridYValues","Fe","De","Ae","Xe","Ye","Ge","barAriaLabel","ze","barAriaLabelledBy","Ne","barAriaDescribedBy","je","barAriaHidden","qe","barAriaDisabled","Ke","_e","Je","Qe","Ue","Ze","$e","et","tt","at","outerWidth","it","outerHeight","nt","innerWidth","rt","innerHeight","ot","dt","ut","ct","st","ht","ft","bt","vt","mt","pt","xt","yt","St","kt","wt","Lt","dataKey","targetKey","Ct","axes","grid","totals","right","bottom","xValues","yValues","Vt","legendData","Bar","renderWrapper","findBarUnderCursor","InnerBarCanvas","renderBar","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","textBaseline","textAlign","fillText","canvasRef","current","getContext","scale","background","fillRect","translate","line","axis","values","font","save","ref","cursor","ResponsiveBar","BarCanvas","ResponsiveBarCanvas","canvasDefaultProps","defaultProps","svgDefaultProps"],"sources":["/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/BarAnnotations.tsx","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/BarLegends.tsx","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/BarItem.tsx","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/BarTooltip.tsx","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/props.ts","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/compute/common.ts","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/compute/grouped.ts","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/compute/stacked.ts","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/compute/legends.ts","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/compute/totals.ts","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/hooks.ts","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/BarTotals.tsx","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/Bar.tsx","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/BarCanvas.tsx","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/ResponsiveBar.tsx","/Users/raajassode/dev/rjsd3v.github.io/node_modules/@nivo/bar/src/ResponsiveBarCanvas.tsx"],"sourcesContent":["import { Annotation, useAnnotations } from '@nivo/annotations'\nimport { BarAnnotationsProps } from './types'\n\nexport const BarAnnotations = <RawDatum,>({ bars, annotations }: BarAnnotationsProps<RawDatum>) => {\n    const boundAnnotations = useAnnotations({\n        data: bars,\n        annotations,\n        getPosition: bar => ({\n            x: bar.x + bar.width / 2,\n            y: bar.y + bar.height / 2,\n        }),\n        getDimensions: ({ height, width }) => ({\n            width,\n            height,\n            size: Math.max(width, height),\n        }),\n    })\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { BoxLegendSvg } from '@nivo/legends'\nimport { BarLegendProps, LegendData } from './types'\n\ninterface BarLegendsProps {\n    width: number\n    height: number\n    legends: [BarLegendProps, LegendData[]][]\n    toggleSerie: (id: string | number) => void\n}\n\nexport const BarLegends = ({ width, height, legends, toggleSerie }: BarLegendsProps) => (\n    <>\n        {legends.map(([legend, data], i) => (\n            <BoxLegendSvg\n                key={i}\n                {...legend}\n                containerWidth={width}\n                containerHeight={height}\n                data={legend.data ?? data}\n                toggleSerie={\n                    legend.toggleSerie && legend.dataFrom === 'keys' ? toggleSerie : undefined\n                }\n            />\n        ))}\n    </>\n)\n","import { createElement, MouseEvent, useCallback, useMemo } from 'react'\nimport { animated, to } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, BarItemProps } from './types'\n\nexport const BarItem = <RawDatum extends BarDatum>({\n    bar: { data, ...bar },\n\n    style: {\n        borderColor,\n        color,\n        height,\n        labelColor,\n        labelOpacity,\n        labelX,\n        labelY,\n        transform,\n        width,\n        textAnchor,\n    },\n\n    borderRadius,\n    borderWidth,\n\n    label,\n    shouldRenderLabel,\n\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    tooltip,\n\n    isFocusable,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    ariaDisabled,\n    ariaHidden,\n}: BarItemProps<RawDatum>) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const renderTooltip = useMemo(\n        () => () => createElement(tooltip, { ...bar, ...data }),\n        [tooltip, bar, data]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.({ color: bar.color, ...data }, event)\n        },\n        [bar, data, onClick]\n    )\n    const handleTooltip = useCallback(\n        (event: MouseEvent<SVGRectElement>) => showTooltipFromEvent(renderTooltip(), event),\n        [showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(data, event)\n            showTooltipFromEvent(renderTooltip(), event)\n        },\n        [data, onMouseEnter, showTooltipFromEvent, renderTooltip]\n    )\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(data, event)\n            hideTooltip()\n        },\n        [data, hideTooltip, onMouseLeave]\n    )\n\n    // extra handlers to allow keyboard navigation\n    const handleFocus = useCallback(() => {\n        showTooltipAt(renderTooltip(), [bar.absX + bar.width / 2, bar.absY])\n    }, [showTooltipAt, renderTooltip, bar])\n    const handleBlur = useCallback(() => {\n        hideTooltip()\n    }, [hideTooltip])\n\n    return (\n        <animated.g transform={transform}>\n            <animated.rect\n                width={to(width, value => Math.max(value, 0))}\n                height={to(height, value => Math.max(value, 0))}\n                rx={borderRadius}\n                ry={borderRadius}\n                fill={data.fill ?? color}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                focusable={isFocusable}\n                tabIndex={isFocusable ? 0 : undefined}\n                aria-label={ariaLabel ? ariaLabel(data) : undefined}\n                aria-labelledby={ariaLabelledBy ? ariaLabelledBy(data) : undefined}\n                aria-describedby={ariaDescribedBy ? ariaDescribedBy(data) : undefined}\n                aria-disabled={ariaDisabled ? ariaDisabled(data) : undefined}\n                aria-hidden={ariaHidden ? ariaHidden(data) : undefined}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleTooltip : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                onFocus={isInteractive && isFocusable ? handleFocus : undefined}\n                onBlur={isInteractive && isFocusable ? handleBlur : undefined}\n            />\n            {shouldRenderLabel && (\n                <animated.text\n                    x={labelX}\n                    y={labelY}\n                    textAnchor={textAnchor}\n                    dominantBaseline=\"central\"\n                    fillOpacity={labelOpacity}\n                    style={{\n                        ...theme.labels.text,\n                        pointerEvents: 'none',\n                        fill: labelColor,\n                    }}\n                >\n                    {label}\n                </animated.text>\n            )}\n        </animated.g>\n    )\n}\n","import { BarTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BarTooltip = <RawDatum,>({ color, label, ...data }: BarTooltipProps<RawDatum>) => {\n    return <BasicTooltip id={label} value={data.formattedValue} enableChip={true} color={color} />\n}\n","import { BarItem } from './BarItem'\nimport { BarTooltip } from './BarTooltip'\nimport { BarCanvasLayerId, BarLayerId, ComputedDatum } from './types'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ScaleBandSpec, ScaleSpec } from '@nivo/scales'\n\nexport const defaultProps = {\n    indexBy: 'id',\n    keys: ['value'],\n\n    groupMode: 'stacked' as const,\n    layout: 'vertical' as const,\n    reverse: false,\n\n    minValue: 'auto' as const,\n    maxValue: 'auto' as const,\n\n    valueScale: { type: 'linear' } as ScaleSpec,\n    indexScale: { type: 'band', round: true } as ScaleBandSpec,\n\n    padding: 0.1,\n    innerPadding: 0,\n\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: false,\n    enableGridY: true,\n\n    enableLabel: true,\n    label: 'formattedValue',\n    labelPosition: 'middle' as const,\n    labelOffset: 0,\n    labelSkipWidth: 0,\n    labelSkipHeight: 0,\n    labelTextColor: { from: 'theme', theme: 'labels.text.fill' },\n\n    colorBy: 'id' as const,\n    colors: { scheme: 'nivo' } as OrdinalColorScaleConfig,\n\n    borderRadius: 0,\n    borderWidth: 0,\n    borderColor: { from: 'color' } as InheritedColorConfig<any>,\n\n    isInteractive: true,\n    tooltip: BarTooltip,\n    tooltipLabel: <RawDatum>(datum: ComputedDatum<RawDatum>) => `${datum.id} - ${datum.indexValue}`,\n\n    legends: [],\n    initialHiddenIds: [],\n    annotations: [],\n    markers: [],\n\n    enableTotals: false,\n    totalsOffset: 10,\n}\n\nexport const svgDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'totals', 'markers', 'legends', 'annotations'] as BarLayerId[],\n    barComponent: BarItem,\n\n    defs: [],\n    fill: [],\n\n    animate: true,\n    motionConfig: 'default',\n\n    role: 'img',\n    isFocusable: false,\n}\n\nexport const canvasDefaultProps = {\n    ...defaultProps,\n    layers: ['grid', 'axes', 'bars', 'totals', 'legends', 'annotations'] as BarCanvasLayerId[],\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { ScaleBandSpec, ScaleBand, computeScale } from '@nivo/scales'\nimport { defaultProps } from '../props'\nimport { BarCommonProps, BarDatum } from '../types'\n\n/**\n * Generates indexed scale.\n */\nexport const getIndexScale = <RawDatum>(\n    data: readonly RawDatum[],\n    getIndex: (datum: RawDatum) => string,\n    padding: number,\n    indexScale: ScaleBandSpec,\n    size: number,\n    axis: 'x' | 'y'\n) => {\n    return (\n        computeScale(\n            indexScale,\n            { all: data.map(getIndex), min: 0, max: 0 },\n            size,\n            axis\n        ) as ScaleBand<string>\n    ).padding(padding)\n}\n\n/**\n * This method ensures all the provided keys exist in the entire series.\n */\nexport const normalizeData = <RawDatum>(data: readonly RawDatum[], keys: readonly string[]) =>\n    data.map(\n        item =>\n            ({\n                ...keys.reduce<Record<string, unknown>>((acc, key) => {\n                    acc[key] = null\n                    return acc\n                }, {}),\n                ...item,\n            } as RawDatum)\n    )\n\nexport const filterNullValues = <RawDatum extends Record<string, unknown>>(data: RawDatum) =>\n    Object.keys(data).reduce<Record<string, unknown>>((acc, key) => {\n        if (data[key]) {\n            acc[key] = data[key]\n        }\n        return acc\n    }, {}) as Exclude<RawDatum, null | undefined | false | '' | 0>\n\nexport const coerceValue = <T>(value: T) => [value, Number(value)] as const\n\nexport type BarLabelLayout = {\n    labelX: number\n    labelY: number\n    textAnchor: 'start' | 'middle' | 'end'\n}\n\n/**\n * Compute the label position and alignment based on a given position and offset.\n */\nexport function useComputeLabelLayout<RawDatum extends BarDatum>(\n    layout: BarCommonProps<RawDatum>['layout'] = defaultProps.layout,\n    reverse: BarCommonProps<RawDatum>['reverse'] = defaultProps.reverse,\n    labelPosition: BarCommonProps<RawDatum>['labelPosition'] = defaultProps.labelPosition,\n    labelOffset: BarCommonProps<RawDatum>['labelOffset'] = defaultProps.labelOffset\n): (width: number, height: number) => BarLabelLayout {\n    return (width: number, height: number) => {\n        // If the chart is reversed, we want to make sure the offset is also reversed\n        const computedLabelOffset = labelOffset * (reverse ? -1 : 1)\n\n        if (layout === 'horizontal') {\n            let x = width / 2\n            if (labelPosition === 'start') {\n                x = reverse ? width : 0\n            } else if (labelPosition === 'end') {\n                x = reverse ? 0 : width\n            }\n            return {\n                labelX: x + computedLabelOffset,\n                labelY: height / 2,\n                textAnchor: labelPosition === 'middle' ? 'middle' : reverse ? 'end' : 'start',\n            }\n        } else {\n            let y = height / 2\n            if (labelPosition === 'start') {\n                y = reverse ? 0 : height\n            } else if (labelPosition === 'end') {\n                y = reverse ? height : 0\n            }\n            return {\n                labelX: width / 2,\n                labelY: y - computedLabelOffset,\n                textAnchor: 'middle',\n            }\n        }\n    }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    data: readonly RawDatum[]\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    keys: string[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst gt = (value: number, other: number) => value > other\nconst lt = (value: number, other: number) => value < other\n\nconst range = (start: number, end: number) =>\n    Array.from(' '.repeat(end - start), (_, index) => start + index)\n\nconst clampToZero = (value: number) => (gt(value, 0) ? 0 : value)\nconst zeroIfNotFinite = (value: number) => (isFinite(value) ? value : 0)\n\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n */\nconst generateVerticalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding = 0,\n        keys,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean,\n    yRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getY = (d: number) => (compare(d, 0) ? yScale(d) ?? 0 : yRef)\n    const getHeight = (d: number, y: number) => (compare(d, 0) ? yRef - y : (yScale(d) ?? 0) - yRef)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, xScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = (xScale(indexValue) ?? 0) + barWidth * i + innerPadding * i\n            const y = getY(value)\n            const barHeight = getHeight(value, y)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n */\nconst generateHorizontalGroupedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        data,\n        formatValue,\n        getIndex,\n        getColor,\n        getTooltipLabel,\n        keys,\n        innerPadding = 0,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean,\n    xRef: number\n): ComputedBarDatum<RawDatum>[] => {\n    const compare = reverse ? lt : gt\n    const getX = (d: number) => (compare(d, 0) ? xRef : xScale(d) ?? 0)\n    const getWidth = (d: number, x: number) => (compare(d, 0) ? (xScale(d) ?? 0) - xRef : xRef - x)\n    const cleanedData = data.map(filterNullValues)\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    keys.forEach((key, i) =>\n        range(0, yScale.domain().length).forEach(index => {\n            const [rawValue, value] = coerceValue(data[index][key])\n            const indexValue = getIndex(data[index])\n            const x = getX(value)\n            const y = (yScale(indexValue) ?? 0) + barHeight * i + innerPadding * i\n            const barWidth = getWidth(value, x)\n            const barData: ComputedDatum<RawDatum> = {\n                id: key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index,\n                indexValue,\n                data: cleanedData[index],\n            }\n\n            bars.push({\n                key: `${key}.${barData.indexValue}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for grouped bar chart.\n */\nexport const generateGroupedBars = <RawDatum extends BarDatum>({\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    innerPadding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const data = normalizeData(props.data, keys)\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const clampMin = scaleSpec.min === 'auto' ? clampToZero : (value: number) => value\n\n    const values = data\n        .reduce<number[]>((acc, entry) => [...acc, ...keys.map(k => entry[k] as number)], [])\n        .filter(Boolean)\n    const min = clampMin(Math.min(...values))\n    const max = zeroIfNotFinite(Math.max(...values))\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const bandwidth = (indexScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length\n    const params = [\n        { ...props, data, keys, innerPadding, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n        scale(0) ?? 0,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalGroupedBars(...params)\n                : generateHorizontalGroupedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import { Margin } from '@nivo/core'\nimport { OrdinalColorScale } from '@nivo/colors'\nimport { Scale, ScaleBand, computeScale } from '@nivo/scales'\nimport { Series, SeriesPoint, stack, stackOffsetDiverging } from 'd3-shape'\nimport { BarDatum, BarSvgProps, ComputedBarDatum, ComputedDatum } from '../types'\nimport { coerceValue, filterNullValues, getIndexScale, normalizeData } from './common'\n\ntype StackDatum<RawDatum> = SeriesPoint<RawDatum>\n\ntype Params<RawDatum, XScaleInput, YScaleInput> = {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    innerPadding: number\n    stackedData: Series<RawDatum, string>[]\n    xScale: XScaleInput extends string ? ScaleBand<XScaleInput> : Scale<XScaleInput, number>\n    yScale: YScaleInput extends string ? ScaleBand<YScaleInput> : Scale<YScaleInput, number>\n    margin: Margin\n}\n\nconst flattenDeep = <T>(arr: T[]): T =>\n    arr.some(Array.isArray) ? flattenDeep(([] as T[]).concat(...arr)) : (arr as unknown as T)\n\nconst filterZerosIfLog = (array: number[], type: string) =>\n    type === 'log' ? array.filter(num => num !== 0) : array\n\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n */\nconst generateVerticalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, string, number>,\n    barWidth: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getY = (d: StackDatum<RawDatum>) => yScale(d[reverse ? 0 : 1])\n    const getHeight = (d: StackDatum<RawDatum>, y: number) => (yScale(d[reverse ? 1 : 0]) ?? 0) - y\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        xScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const x = xScale(getIndex(d.data)) ?? 0\n            const y = (getY(d) ?? 0) + innerPadding * 0.5\n            const barHeight = getHeight(d, y) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n */\nconst generateHorizontalStackedBars = <RawDatum extends Record<string, unknown>>(\n    {\n        formatValue,\n        getColor,\n        getIndex,\n        getTooltipLabel,\n        innerPadding,\n        stackedData,\n        xScale,\n        yScale,\n        margin,\n    }: Params<RawDatum, number, string>,\n    barHeight: number,\n    reverse: boolean\n): ComputedBarDatum<RawDatum>[] => {\n    const getX = (d: StackDatum<RawDatum>) => xScale(d[reverse ? 1 : 0])\n    const getWidth = (d: StackDatum<RawDatum>, x: number) => (xScale(d[reverse ? 0 : 1]) ?? 0) - x\n\n    const bars: ComputedBarDatum<RawDatum>[] = []\n    stackedData.forEach(stackedDataItem =>\n        yScale.domain().forEach((index, i) => {\n            const d = stackedDataItem[i]\n            const y = yScale(getIndex(d.data)) ?? 0\n            const x = (getX(d) ?? 0) + innerPadding * 0.5\n            const barWidth = getWidth(d, x) - innerPadding\n            const [rawValue, value] = coerceValue(d.data[stackedDataItem.key])\n\n            const barData: ComputedDatum<RawDatum> = {\n                id: stackedDataItem.key,\n                value: rawValue === null ? rawValue : value,\n                formattedValue: formatValue(value),\n                hidden: false,\n                index: i,\n                indexValue: index,\n                data: filterNullValues(d.data),\n            }\n\n            bars.push({\n                key: `${stackedDataItem.key}.${index}`,\n                index: bars.length,\n                data: barData,\n                x,\n                y,\n                absX: margin.left + x,\n                absY: margin.top + y,\n                width: barWidth,\n                height: barHeight,\n                color: getColor(barData),\n                label: getTooltipLabel(barData),\n            })\n        })\n    )\n\n    return bars\n}\n\n/**\n * Generates x/y scales & bars for stacked bar chart.\n */\nexport const generateStackedBars = <RawDatum extends BarDatum>({\n    data,\n    layout,\n    minValue,\n    maxValue,\n    reverse,\n    width,\n    height,\n    padding = 0,\n    valueScale,\n    indexScale: indexScaleConfig,\n    hiddenIds = [],\n    ...props\n}: Pick<\n    Required<BarSvgProps<RawDatum>>,\n    | 'data'\n    | 'height'\n    | 'indexScale'\n    | 'innerPadding'\n    | 'keys'\n    | 'layout'\n    | 'maxValue'\n    | 'minValue'\n    | 'padding'\n    | 'reverse'\n    | 'valueScale'\n    | 'width'\n> & {\n    formatValue: (value: number) => string\n    getColor: OrdinalColorScale<ComputedDatum<RawDatum>>\n    getIndex: (datum: RawDatum) => string\n    getTooltipLabel: (datum: ComputedDatum<RawDatum>) => string\n    margin: Margin\n    hiddenIds?: readonly (string | number)[]\n}) => {\n    const keys = props.keys.filter(key => !hiddenIds.includes(key))\n    const stackedData = stack<RawDatum, string>().keys(keys).offset(stackOffsetDiverging)(\n        normalizeData(data, keys)\n    )\n\n    const [axis, otherAxis, size] =\n        layout === 'vertical' ? (['y', 'x', width] as const) : (['x', 'y', height] as const)\n    const indexScale = getIndexScale(\n        data,\n        props.getIndex,\n        padding,\n        indexScaleConfig,\n        size,\n        otherAxis\n    )\n\n    const scaleSpec = {\n        max: maxValue,\n        min: minValue,\n        reverse,\n        ...valueScale,\n    }\n\n    const values = filterZerosIfLog(\n        flattenDeep(stackedData as unknown as number[][]),\n        valueScale.type\n    )\n    const min = Math.min(...values)\n    const max = Math.max(...values)\n\n    const scale = computeScale(\n        scaleSpec as any,\n        { all: values, min, max },\n        axis === 'x' ? width : height,\n        axis\n    )\n\n    const [xScale, yScale] = layout === 'vertical' ? [indexScale, scale] : [scale, indexScale]\n\n    const innerPadding = props.innerPadding > 0 ? props.innerPadding : 0\n    const bandwidth = indexScale.bandwidth()\n    const params = [\n        { ...props, innerPadding, stackedData, xScale, yScale } as Params<RawDatum, any, any>,\n        bandwidth,\n        scaleSpec.reverse,\n    ] as const\n\n    const bars: ComputedBarDatum<RawDatum>[] =\n        bandwidth > 0\n            ? layout === 'vertical'\n                ? generateVerticalStackedBars(...params)\n                : generateHorizontalStackedBars(...params)\n            : []\n\n    return { xScale, yScale, bars }\n}\n","import {\n    BarDatum,\n    BarLegendProps,\n    BarSvgProps,\n    BarsWithHidden,\n    LegendData,\n    LegendLabelDatum,\n} from '../types'\nimport { getPropertyAccessor } from '@nivo/core'\nimport uniqBy from 'lodash/uniqBy'\n\nexport const getLegendDataForKeys = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    direction: BarLegendProps['direction'],\n    groupMode: NonNullable<BarSvgProps<RawDatum>['groupMode']>,\n    reverse: boolean,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.id,\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (\n        (layout === 'vertical' &&\n            groupMode === 'stacked' &&\n            direction === 'column' &&\n            reverse !== true) ||\n        (layout === 'horizontal' && groupMode === 'stacked' && reverse === true)\n    ) {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendDataForIndexes = <RawDatum extends BarDatum>(\n    bars: BarsWithHidden<RawDatum>,\n    layout: NonNullable<BarSvgProps<RawDatum>['layout']>,\n    getLegendLabel: (datum: LegendLabelDatum<RawDatum>) => string\n): LegendData[] => {\n    const data = uniqBy(\n        bars.map(bar => ({\n            id: bar.data.indexValue ?? '',\n            label: getLegendLabel(bar.data),\n            hidden: bar.data.hidden,\n            color: bar.color ?? '#000',\n        })),\n        ({ id }) => id\n    )\n\n    if (layout === 'horizontal') {\n        data.reverse()\n    }\n\n    return data\n}\n\nexport const getLegendData = <RawDatum extends BarDatum>({\n    bars,\n    direction,\n    from,\n    groupMode,\n    layout,\n    legendLabel,\n    reverse,\n}: Pick<Required<BarSvgProps<RawDatum>>, 'layout' | 'groupMode' | 'reverse'> & {\n    bars: BarsWithHidden<RawDatum>\n    direction: BarLegendProps['direction']\n    from: BarLegendProps['dataFrom']\n    legendLabel: BarSvgProps<RawDatum>['legendLabel']\n}) => {\n    const getLegendLabel = getPropertyAccessor(\n        legendLabel ?? (from === 'indexes' ? 'indexValue' : 'id')\n    )\n\n    if (from === 'indexes') {\n        return getLegendDataForIndexes(bars, layout, getLegendLabel)\n    }\n\n    return getLegendDataForKeys(bars, layout, direction, groupMode, reverse, getLegendLabel)\n}\n","import { AnyScale, ScaleBand } from '@nivo/scales'\nimport { defaultProps } from '../props'\nimport { BarCommonProps, BarDatum, ComputedBarDatum } from '../types'\n\nexport interface BarTotalsData {\n    key: string\n    x: number\n    y: number\n    value: number\n    formattedValue: string\n    animationOffset: number\n}\n\nexport const computeBarTotals = <RawDatum extends BarDatum>(\n    bars: ComputedBarDatum<RawDatum>[],\n    xScale: ScaleBand<string> | AnyScale,\n    yScale: ScaleBand<string> | AnyScale,\n    layout: BarCommonProps<RawDatum>['layout'] = defaultProps.layout,\n    groupMode: BarCommonProps<RawDatum>['groupMode'] = defaultProps.groupMode,\n    totalsOffset: number,\n    formatValue: (value: number) => string\n) => {\n    const totals = [] as BarTotalsData[]\n\n    if (bars.length === 0) return totals\n\n    const totalsByIndex = new Map<string | number, number>()\n\n    const barWidth = bars[0].width\n    const barHeight = bars[0].height\n\n    if (groupMode === 'stacked') {\n        const totalsPositivesByIndex = new Map<string | number, number>()\n\n        bars.forEach(bar => {\n            const { indexValue, value } = bar.data\n            updateTotalsByIndex(totalsByIndex, indexValue, Number(value))\n            updateTotalsPositivesByIndex(totalsPositivesByIndex, indexValue, Number(value))\n        })\n\n        totalsPositivesByIndex.forEach((totalsPositive, indexValue) => {\n            const indexTotal = totalsByIndex.get(indexValue) || 0\n\n            let xPosition: number\n            let yPosition: number\n            let animationOffset: number\n\n            if (layout === 'vertical') {\n                xPosition = xScale(indexValue)\n                yPosition = yScale(totalsPositive)\n                animationOffset = yScale(totalsPositive / 2)\n            } else {\n                xPosition = xScale(totalsPositive)\n                yPosition = yScale(indexValue)\n                animationOffset = xScale(totalsPositive / 2)\n            }\n\n            xPosition += layout === 'vertical' ? barWidth / 2 : totalsOffset\n            yPosition += layout === 'vertical' ? -totalsOffset : barHeight / 2\n\n            totals.push({\n                key: 'total_' + indexValue,\n                x: xPosition,\n                y: yPosition,\n                value: indexTotal,\n                formattedValue: formatValue(indexTotal),\n                animationOffset,\n            })\n        })\n    } else if (groupMode === 'grouped') {\n        const greatestValueByIndex = new Map<string | number, number>()\n        const numberOfBarsByIndex = new Map()\n\n        bars.forEach(bar => {\n            const { indexValue, value } = bar.data\n            updateTotalsByIndex(totalsByIndex, indexValue, Number(value))\n            updateGreatestValueByIndex(greatestValueByIndex, indexValue, Number(value))\n            updateNumberOfBarsByIndex(numberOfBarsByIndex, indexValue)\n        })\n\n        greatestValueByIndex.forEach((greatestValue, indexValue) => {\n            const indexTotal = totalsByIndex.get(indexValue) || 0\n            const numberOfBars = numberOfBarsByIndex.get(indexValue)\n\n            let xPosition: number\n            let yPosition: number\n            let animationOffset: number\n\n            if (layout === 'vertical') {\n                xPosition = xScale(indexValue)\n                yPosition = yScale(greatestValue)\n                animationOffset = yScale(greatestValue / 2)\n            } else {\n                xPosition = xScale(greatestValue)\n                yPosition = yScale(indexValue)\n                animationOffset = xScale(greatestValue / 2)\n            }\n\n            const indexBarsWidth = numberOfBars * barWidth\n            const indexBarsHeight = numberOfBars * barHeight\n\n            xPosition += layout === 'vertical' ? indexBarsWidth / 2 : totalsOffset\n            yPosition += layout === 'vertical' ? -totalsOffset : indexBarsHeight / 2\n\n            totals.push({\n                key: 'total_' + indexValue,\n                x: xPosition,\n                y: yPosition,\n                value: indexTotal,\n                formattedValue: formatValue(indexTotal),\n                animationOffset,\n            })\n        })\n    }\n    return totals\n}\n\n// this function is used to compute the total value for the indexes. The total value is later rendered on the chart\nexport const updateTotalsByIndex = (\n    totalsByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentIndexValue = totalsByIndex.get(indexValue) || 0\n    totalsByIndex.set(indexValue, currentIndexValue + value)\n}\n\n// this function is used to compute only the positive values of the indexes. Useful to position the text right above the last stacked bar. It prevents overlapping in case of negative values\nexport const updateTotalsPositivesByIndex = (\n    totalsPositivesByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentIndexValue = totalsPositivesByIndex.get(indexValue) || 0\n    totalsPositivesByIndex.set(indexValue, currentIndexValue + (value > 0 ? value : 0))\n}\n\n// this function is used to keep track of the highest value for the indexes. Useful to position the text above the longest grouped bar\nexport const updateGreatestValueByIndex = (\n    greatestValueByIndex: Map<string | number, number>,\n    indexValue: string | number,\n    value: number\n) => {\n    const currentGreatestValue = greatestValueByIndex.get(indexValue) || 0\n    greatestValueByIndex.set(indexValue, Math.max(currentGreatestValue, Number(value)))\n}\n\n// this function is used to save the number of bars for the indexes. Useful to position the text in the middle of the grouped bars\nexport const updateNumberOfBarsByIndex = (\n    numberOfBarsByIndex: Map<string | number, number>,\n    indexValue: string | number\n) => {\n    const currentNumberOfBars = numberOfBarsByIndex.get(indexValue) || 0\n    numberOfBarsByIndex.set(indexValue, currentNumberOfBars + 1)\n}\n","import { useCallback, useMemo, useState } from 'react'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { usePropertyAccessor, useTheme, useValueFormatter, Margin } from '@nivo/core'\nimport {\n    DataProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatumWithValue,\n    LegendData,\n    BarLegendProps,\n} from './types'\nimport { defaultProps } from './props'\nimport { generateGroupedBars, generateStackedBars, getLegendData } from './compute'\nimport { computeBarTotals } from './compute/totals'\n\nexport const useBar = <RawDatum extends BarDatum>({\n    indexBy = defaultProps.indexBy,\n    keys = defaultProps.keys,\n    label = defaultProps.label,\n    tooltipLabel = defaultProps.tooltipLabel,\n    valueFormat,\n    colors = defaultProps.colors,\n    colorBy = defaultProps.colorBy,\n    borderColor = defaultProps.borderColor,\n    labelTextColor = defaultProps.labelTextColor,\n    groupMode = defaultProps.groupMode,\n    layout = defaultProps.layout,\n    reverse = defaultProps.reverse,\n    data,\n    minValue = defaultProps.minValue,\n    maxValue = defaultProps.maxValue,\n    margin,\n    width,\n    height,\n    padding = defaultProps.padding,\n    innerPadding = defaultProps.innerPadding,\n    valueScale = defaultProps.valueScale,\n    indexScale = defaultProps.indexScale,\n    initialHiddenIds = defaultProps.initialHiddenIds,\n    enableLabel = defaultProps.enableLabel,\n    labelSkipWidth = defaultProps.labelSkipWidth,\n    labelSkipHeight = defaultProps.labelSkipHeight,\n    legends = defaultProps.legends,\n    legendLabel,\n    totalsOffset = defaultProps.totalsOffset,\n}: {\n    indexBy?: BarCommonProps<RawDatum>['indexBy']\n    label?: BarCommonProps<RawDatum>['label']\n    tooltipLabel?: BarCommonProps<RawDatum>['tooltipLabel']\n    valueFormat?: BarCommonProps<RawDatum>['valueFormat']\n    colors?: BarCommonProps<RawDatum>['colors']\n    colorBy?: BarCommonProps<RawDatum>['colorBy']\n    borderColor?: BarCommonProps<RawDatum>['borderColor']\n    labelTextColor?: BarCommonProps<RawDatum>['labelTextColor']\n    groupMode?: BarCommonProps<RawDatum>['groupMode']\n    layout?: BarCommonProps<RawDatum>['layout']\n    reverse?: BarCommonProps<RawDatum>['reverse']\n    data: DataProps<RawDatum>['data']\n    keys?: BarCommonProps<RawDatum>['keys']\n    minValue?: BarCommonProps<RawDatum>['minValue']\n    maxValue?: BarCommonProps<RawDatum>['maxValue']\n    margin: Margin\n    width: number\n    height: number\n    padding?: BarCommonProps<RawDatum>['padding']\n    innerPadding?: BarCommonProps<RawDatum>['innerPadding']\n    valueScale?: BarCommonProps<RawDatum>['valueScale']\n    indexScale?: BarCommonProps<RawDatum>['indexScale']\n    initialHiddenIds?: BarCommonProps<RawDatum>['initialHiddenIds']\n    enableLabel?: BarCommonProps<RawDatum>['enableLabel']\n    labelSkipWidth?: BarCommonProps<RawDatum>['labelSkipWidth']\n    labelSkipHeight?: BarCommonProps<RawDatum>['labelSkipHeight']\n    legends?: BarCommonProps<RawDatum>['legends']\n    legendLabel?: BarCommonProps<RawDatum>['legendLabel']\n    totalsOffset?: BarCommonProps<RawDatum>['totalsOffset']\n}) => {\n    const [hiddenIds, setHiddenIds] = useState(initialHiddenIds ?? [])\n    const toggleSerie = useCallback((id: string | number) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const getIndex = usePropertyAccessor(indexBy)\n    const getLabel = usePropertyAccessor(label)\n    const getTooltipLabel = usePropertyAccessor(tooltipLabel)\n    const formatValue = useValueFormatter(valueFormat)\n\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale(colors, colorBy)\n    const getBorderColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        borderColor,\n        theme\n    )\n    const getLabelColor = useInheritedColor<ComputedBarDatumWithValue<RawDatum>>(\n        labelTextColor,\n        theme\n    )\n\n    const generateBars = groupMode === 'grouped' ? generateGroupedBars : generateStackedBars\n    const { bars, xScale, yScale } = generateBars({\n        layout,\n        reverse,\n        data,\n        getIndex,\n        keys,\n        minValue,\n        maxValue,\n        width,\n        height,\n        getColor,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        hiddenIds,\n        formatValue,\n        getTooltipLabel,\n        margin,\n    })\n\n    const barsWithValue = useMemo(\n        () =>\n            bars\n                .filter(\n                    (bar): bar is ComputedBarDatumWithValue<RawDatum> => bar.data.value !== null\n                )\n                .map((bar, index) => ({\n                    ...bar,\n                    index,\n                })),\n        [bars]\n    )\n\n    const shouldRenderBarLabel = useCallback(\n        ({ width, height }: { height: number; width: number }) => {\n            if (!enableLabel) return false\n            if (labelSkipWidth > 0 && width < labelSkipWidth) return false\n            if (labelSkipHeight > 0 && height < labelSkipHeight) return false\n            return true\n        },\n        [enableLabel, labelSkipWidth, labelSkipHeight]\n    )\n\n    const legendData = useMemo(\n        () =>\n            keys.map(key => {\n                const bar = bars.find(bar => bar.data.id === key)\n\n                return { ...bar, data: { id: key, ...bar?.data, hidden: hiddenIds.includes(key) } }\n            }),\n        [hiddenIds, keys, bars]\n    )\n\n    const legendsWithData: [BarLegendProps, LegendData[]][] = useMemo(\n        () =>\n            legends.map(legend => {\n                const data = getLegendData({\n                    bars: legend.dataFrom === 'keys' ? legendData : bars,\n                    direction: legend.direction,\n                    from: legend.dataFrom,\n                    groupMode,\n                    layout,\n                    legendLabel,\n                    reverse,\n                })\n\n                return [legend, data]\n            }),\n        [legends, legendData, bars, groupMode, layout, legendLabel, reverse]\n    )\n\n    const barTotals = useMemo(\n        () => computeBarTotals(bars, xScale, yScale, layout, groupMode, totalsOffset, formatValue),\n        [bars, xScale, yScale, layout, groupMode, totalsOffset, formatValue]\n    )\n\n    return {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getIndex,\n        getLabel,\n        getTooltipLabel,\n        formatValue,\n        getColor,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        hiddenIds,\n        toggleSerie,\n        legendsWithData,\n        barTotals,\n    }\n}\n","import { useTheme } from '@nivo/core'\nimport { AnimationConfig, animated, useTransition } from '@react-spring/web'\nimport { BarCommonProps, BarDatum } from './types'\nimport { svgDefaultProps } from './props'\nimport { BarTotalsData } from './compute/totals'\n\ninterface Props<RawDatum extends BarDatum> {\n    data: BarTotalsData[]\n    springConfig: Partial<AnimationConfig>\n    animate: boolean\n    layout?: BarCommonProps<RawDatum>['layout']\n}\n\nexport const BarTotals = <RawDatum extends BarDatum>({\n    data,\n    springConfig,\n    animate,\n    layout = svgDefaultProps.layout,\n}: Props<RawDatum>) => {\n    const theme = useTheme()\n    const totalsTransition = useTransition<\n        BarTotalsData,\n        {\n            x: number\n            y: number\n            labelOpacity: number\n        }\n    >(data, {\n        keys: barTotal => barTotal.key,\n        from: barTotal => ({\n            x: layout === 'vertical' ? barTotal.x : barTotal.animationOffset,\n            y: layout === 'vertical' ? barTotal.animationOffset : barTotal.y,\n            labelOpacity: 0,\n        }),\n        enter: barTotal => ({\n            x: barTotal.x,\n            y: barTotal.y,\n            labelOpacity: 1,\n        }),\n        update: barTotal => ({\n            x: barTotal.x,\n            y: barTotal.y,\n            labelOpacity: 1,\n        }),\n        leave: barTotal => ({\n            x: layout === 'vertical' ? barTotal.x : barTotal.animationOffset,\n            y: layout === 'vertical' ? barTotal.animationOffset : barTotal.y,\n            labelOpacity: 0,\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    return totalsTransition((style, barTotal) => (\n        <animated.text\n            key={barTotal.key}\n            x={style.x}\n            y={style.y}\n            fillOpacity={style.labelOpacity}\n            style={{\n                ...theme.labels.text,\n                pointerEvents: 'none',\n                fill: theme.text.fill,\n            }}\n            fontWeight=\"bold\"\n            fontSize={theme.labels.text.fontSize}\n            fontFamily={theme.labels.text.fontFamily}\n            textAnchor={layout === 'vertical' ? 'middle' : 'start'}\n            alignmentBaseline={layout === 'vertical' ? 'alphabetic' : 'middle'}\n        >\n            {barTotal.formattedValue}\n        </animated.text>\n    ))\n}\n","import { Axes, Grid } from '@nivo/axes'\nimport {\n    CartesianMarkers,\n    Container,\n    SvgWrapper,\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    useMotionConfig,\n} from '@nivo/core'\nimport { useTransition } from '@react-spring/web'\nimport { Fragment, ReactNode, createElement, useMemo } from 'react'\nimport { BarAnnotations } from './BarAnnotations'\nimport { BarLegends } from './BarLegends'\nimport { useBar } from './hooks'\nimport { svgDefaultProps } from './props'\nimport {\n    BarCustomLayerProps,\n    BarDatum,\n    BarItemProps,\n    BarLayer,\n    BarLayerId,\n    BarSvgProps,\n    ComputedBarDatumWithValue,\n} from './types'\nimport { BarTotals } from './BarTotals'\nimport { useComputeLabelLayout } from './compute/common'\n\ntype InnerBarProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerBar = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = svgDefaultProps.axisBottom,\n    axisLeft = svgDefaultProps.axisLeft,\n    enableGridX = svgDefaultProps.enableGridX,\n    enableGridY = svgDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    layers = svgDefaultProps.layers as readonly BarLayer<RawDatum>[],\n    barComponent = svgDefaultProps.barComponent,\n\n    enableLabel = svgDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = svgDefaultProps.labelSkipWidth,\n    labelSkipHeight = svgDefaultProps.labelSkipHeight,\n    labelTextColor,\n    labelPosition = svgDefaultProps.labelPosition,\n    labelOffset = svgDefaultProps.labelOffset,\n\n    markers = svgDefaultProps.markers,\n\n    colorBy,\n    colors,\n    defs = svgDefaultProps.defs,\n    fill = svgDefaultProps.fill,\n    borderRadius = svgDefaultProps.borderRadius,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = svgDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = svgDefaultProps.isInteractive,\n    tooltip = svgDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable = svgDefaultProps.isFocusable,\n    barAriaLabel,\n    barAriaLabelledBy,\n    barAriaDescribedBy,\n    barAriaHidden,\n    barAriaDisabled,\n\n    initialHiddenIds,\n\n    enableTotals = svgDefaultProps.enableTotals,\n    totalsOffset = svgDefaultProps.totalsOffset,\n}: InnerBarProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        toggleSerie,\n        legendsWithData,\n        barTotals,\n        getColor,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        initialHiddenIds,\n        totalsOffset,\n    })\n\n    const computeLabelLayout = useComputeLabelLayout(layout, reverse, labelPosition, labelOffset)\n\n    const transition = useTransition<\n        ComputedBarDatumWithValue<RawDatum>,\n        {\n            borderColor: string\n            color: string\n            height: number\n            labelColor: string\n            labelOpacity: number\n            labelX: number\n            labelY: number\n            opacity: number\n            transform: string\n            width: number\n            textAnchor: BarItemProps<RawDatum>['style']['textAnchor']\n        }\n    >(barsWithValue, {\n        keys: bar => bar.key,\n        from: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            ...computeLabelLayout(bar.width, bar.height),\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        enter: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            ...computeLabelLayout(bar.width, bar.height),\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        update: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: bar.height,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 1,\n            ...computeLabelLayout(bar.width, bar.height),\n            transform: `translate(${bar.x}, ${bar.y})`,\n            width: bar.width,\n        }),\n        leave: bar => ({\n            borderColor: getBorderColor(bar) as string,\n            color: bar.color,\n            height: 0,\n            labelColor: getLabelColor(bar) as string,\n            labelOpacity: 0,\n            ...computeLabelLayout(bar.width, bar.height),\n            labelY: 0,\n            transform: `translate(${bar.x}, ${bar.y + bar.height})`,\n            width: bar.width,\n            ...(layout === 'vertical'\n                ? {}\n                : {\n                      ...computeLabelLayout(bar.width, bar.height),\n                      labelX: 0,\n                      height: bar.height,\n                      transform: `translate(${bar.x}, ${bar.y})`,\n                      width: 0,\n                  }),\n        }),\n        config: springConfig,\n        immediate: !animate,\n        initial: animate ? undefined : null,\n    })\n\n    const commonProps = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getTooltipLabel,\n            tooltip,\n            isFocusable,\n            ariaLabel: barAriaLabel,\n            ariaLabelledBy: barAriaLabelledBy,\n            ariaDescribedBy: barAriaDescribedBy,\n            ariaHidden: barAriaHidden,\n            ariaDisabled: barAriaDisabled,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            enableLabel,\n            getTooltipLabel,\n            isInteractive,\n            labelSkipHeight,\n            labelSkipWidth,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            tooltip,\n            isFocusable,\n            barAriaLabel,\n            barAriaLabelledBy,\n            barAriaDescribedBy,\n            barAriaHidden,\n            barAriaDisabled,\n        ]\n    )\n\n    const boundDefs = bindDefs(defs, bars, fill, {\n        dataKey: 'data',\n        targetKey: 'data.fill',\n    })\n\n    const layerById: Record<BarLayerId, ReactNode> = {\n        annotations: null,\n        axes: null,\n        bars: null,\n        grid: null,\n        legends: null,\n        markers: null,\n        totals: null,\n    }\n\n    if (layers.includes('annotations')) {\n        layerById.annotations = (\n            <BarAnnotations key=\"annotations\" bars={bars} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Fragment key=\"bars\">\n                {transition((style, bar) =>\n                    createElement(barComponent, {\n                        ...commonProps,\n                        bar,\n                        style,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        label: getLabel(bar.data),\n                    })\n                )}\n            </Fragment>\n        )\n    }\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <BarLegends\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                legends={legendsWithData}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    if (layers.includes('markers')) {\n        layerById.markers = (\n            <CartesianMarkers<number | string, number>\n                key=\"markers\"\n                markers={markers as any[]}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale as (v: number | string) => number}\n                yScale={yScale as (v: number) => number}\n            />\n        )\n    }\n\n    if (layers.includes('totals') && enableTotals) {\n        layerById.totals = (\n            <BarTotals\n                key=\"totals\"\n                data={barTotals}\n                springConfig={springConfig}\n                animate={animate}\n                layout={layout}\n            />\n        )\n    }\n\n    const layerContext: BarCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            ...commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getColor,\n        }),\n        [\n            commonProps,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getColor,\n        ]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n            isFocusable={isFocusable}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Bar = <RawDatum extends BarDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: BarSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerBar<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import {\n    BarCanvasCustomLayerProps,\n    BarCanvasLayer,\n    BarCanvasProps,\n    BarCommonProps,\n    BarDatum,\n    ComputedBarDatum,\n} from './types'\nimport {\n    CompleteTheme,\n    Container,\n    Margin,\n    getRelativeCursor,\n    isCursorInRect,\n    useDimensions,\n    useTheme,\n    useValueFormatter,\n} from '@nivo/core'\nimport {\n    ForwardedRef,\n    createElement,\n    forwardRef,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react'\nimport { canvasDefaultProps } from './props'\nimport {\n    renderAnnotationsToCanvas,\n    useAnnotations,\n    useComputedAnnotations,\n} from '@nivo/annotations'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useBar } from './hooks'\nimport { BarTotalsData } from './compute/totals'\nimport { useComputeLabelLayout } from './compute/common'\n\ntype InnerBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'renderWrapper' | 'theme'\n> & {\n    canvasRef: ForwardedRef<HTMLCanvasElement>\n}\n\nconst findBarUnderCursor = <RawDatum,>(\n    nodes: ComputedBarDatum<RawDatum>[],\n    margin: Margin,\n    x: number,\n    y: number\n) =>\n    nodes.find(node =>\n        isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y)\n    )\n\nconst isNumber = (value: unknown): value is number => typeof value === 'number'\n\nfunction renderTotalsToCanvas<RawDatum extends BarDatum>(\n    ctx: CanvasRenderingContext2D,\n    barTotals: BarTotalsData[],\n    theme: CompleteTheme,\n    layout: BarCommonProps<RawDatum>['layout'] = canvasDefaultProps.layout\n) {\n    ctx.fillStyle = theme.text.fill\n    ctx.font = `bold ${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n    ctx.textBaseline = layout === 'vertical' ? 'alphabetic' : 'middle'\n    ctx.textAlign = layout === 'vertical' ? 'center' : 'start'\n\n    barTotals.forEach(barTotal => {\n        ctx.fillText(barTotal.formattedValue, barTotal.x, barTotal.y)\n    })\n}\n\nconst InnerBarCanvas = <RawDatum extends BarDatum>({\n    data,\n    indexBy,\n    keys,\n\n    margin: partialMargin,\n    width,\n    height,\n\n    groupMode,\n    layout,\n    reverse,\n    minValue,\n    maxValue,\n\n    valueScale,\n    indexScale,\n\n    padding,\n    innerPadding,\n\n    axisTop,\n    axisRight,\n    axisBottom = canvasDefaultProps.axisBottom,\n    axisLeft = canvasDefaultProps.axisLeft,\n    enableGridX = canvasDefaultProps.enableGridX,\n    enableGridY = canvasDefaultProps.enableGridY,\n    gridXValues,\n    gridYValues,\n\n    labelPosition = canvasDefaultProps.labelPosition,\n    labelOffset = canvasDefaultProps.labelOffset,\n\n    layers = canvasDefaultProps.layers as BarCanvasLayer<RawDatum>[],\n    renderBar = (\n        ctx,\n        {\n            bar: { color, height, width, x, y },\n\n            borderColor,\n            borderRadius,\n            borderWidth,\n            label,\n            labelColor,\n            shouldRenderLabel,\n            labelX,\n            labelY,\n            textAnchor,\n        }\n    ) => {\n        ctx.fillStyle = color\n\n        if (borderWidth > 0) {\n            ctx.strokeStyle = borderColor\n            ctx.lineWidth = borderWidth\n        }\n\n        ctx.beginPath()\n\n        if (borderRadius > 0) {\n            const radius = Math.min(borderRadius, height)\n\n            ctx.moveTo(x + radius, y)\n            ctx.lineTo(x + width - radius, y)\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius)\n            ctx.lineTo(x + width, y + height - radius)\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\n            ctx.lineTo(x + radius, y + height)\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius)\n            ctx.lineTo(x, y + radius)\n            ctx.quadraticCurveTo(x, y, x + radius, y)\n            ctx.closePath()\n        } else {\n            ctx.rect(x, y, width, height)\n        }\n\n        ctx.fill()\n\n        if (borderWidth > 0) {\n            ctx.stroke()\n        }\n\n        if (shouldRenderLabel) {\n            ctx.textBaseline = 'middle'\n            ctx.textAlign = textAnchor === 'middle' ? 'center' : textAnchor\n            ctx.fillStyle = labelColor\n            ctx.fillText(label, x + labelX, y + labelY)\n        }\n    },\n\n    enableLabel = canvasDefaultProps.enableLabel,\n    label,\n    labelSkipWidth = canvasDefaultProps.labelSkipWidth,\n    labelSkipHeight = canvasDefaultProps.labelSkipHeight,\n    labelTextColor,\n\n    colorBy,\n    colors,\n    borderRadius = canvasDefaultProps.borderRadius,\n    borderWidth = canvasDefaultProps.borderWidth,\n    borderColor,\n\n    annotations = canvasDefaultProps.annotations,\n\n    legendLabel,\n    tooltipLabel,\n\n    valueFormat,\n\n    isInteractive = canvasDefaultProps.isInteractive,\n    tooltip = canvasDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n\n    legends,\n\n    pixelRatio = canvasDefaultProps.pixelRatio,\n\n    canvasRef,\n\n    enableTotals = canvasDefaultProps.enableTotals,\n    totalsOffset = canvasDefaultProps.totalsOffset,\n}: InnerBarCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        bars,\n        barsWithValue,\n        xScale,\n        yScale,\n        getLabel,\n        getTooltipLabel,\n        getBorderColor,\n        getLabelColor,\n        shouldRenderBarLabel,\n        legendsWithData,\n        barTotals,\n        getColor,\n    } = useBar<RawDatum>({\n        indexBy,\n        label,\n        tooltipLabel,\n        valueFormat,\n        colors,\n        colorBy,\n        borderColor,\n        labelTextColor,\n        groupMode,\n        layout,\n        reverse,\n        data,\n        keys,\n        minValue,\n        maxValue,\n        margin,\n        width: innerWidth,\n        height: innerHeight,\n        padding,\n        innerPadding,\n        valueScale,\n        indexScale,\n        enableLabel,\n        labelSkipWidth,\n        labelSkipHeight,\n        legends,\n        legendLabel,\n        totalsOffset,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    // Using any because return type isn't correct\n    const boundAnnotations: any = useComputedAnnotations({\n        annotations: useAnnotations({\n            data: bars,\n            annotations,\n            getPosition: node => ({\n                x: node.x,\n                y: node.y,\n            }),\n            getDimensions: ({ width, height }) => ({\n                width,\n                height,\n                size: Math.max(width, height),\n            }),\n        }),\n    })\n\n    // We use `any` here until we can figure out the best way to type xScale/yScale\n    const layerContext: BarCanvasCustomLayerProps<RawDatum> = useMemo(\n        () => ({\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            isFocusable: false,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendData: legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getColor,\n        }),\n        [\n            borderRadius,\n            borderWidth,\n            isInteractive,\n            labelSkipWidth,\n            labelSkipHeight,\n            margin,\n            width,\n            height,\n            innerWidth,\n            innerHeight,\n            bars,\n            legendsWithData,\n            enableLabel,\n            xScale,\n            yScale,\n            tooltip,\n            getTooltipLabel,\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            getColor,\n        ]\n    )\n\n    const formatValue = useValueFormatter(valueFormat)\n    const computeLabelLayout = useComputeLabelLayout(layout, reverse, labelPosition, labelOffset)\n\n    useEffect(() => {\n        const ctx = canvasEl.current?.getContext('2d')\n\n        if (!canvasEl.current) return\n        if (!ctx) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (layer === 'grid') {\n                if (isNumber(theme.grid.line.strokeWidth) && theme.grid.line.strokeWidth > 0) {\n                    ctx.lineWidth = theme.grid.line.strokeWidth\n                    ctx.strokeStyle = theme.grid.line.stroke as string\n\n                    if (enableGridX) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: xScale,\n                            axis: 'x',\n                            values: gridXValues,\n                        })\n                    }\n\n                    if (enableGridY) {\n                        renderGridLinesToCanvas<string | number>(ctx, {\n                            width: innerWidth,\n                            height: innerHeight,\n                            scale: yScale,\n                            axis: 'y',\n                            values: gridYValues,\n                        })\n                    }\n                }\n            } else if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale: xScale,\n                    yScale: yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            } else if (layer === 'bars') {\n                barsWithValue.forEach(bar => {\n                    renderBar(ctx, {\n                        bar,\n                        borderColor: getBorderColor(bar) as string,\n                        borderRadius,\n                        borderWidth,\n                        label: getLabel(bar.data),\n                        labelColor: getLabelColor(bar) as string,\n                        shouldRenderLabel: shouldRenderBarLabel(bar),\n                        ...computeLabelLayout(bar.width, bar.height),\n                    })\n                })\n            } else if (layer === 'legends') {\n                legendsWithData.forEach(([legend, data]) => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            } else if (layer === 'annotations') {\n                renderAnnotationsToCanvas(ctx, { annotations: boundAnnotations, theme })\n            } else if (layer === 'totals' && enableTotals) {\n                renderTotalsToCanvas(ctx, barTotals, theme, layout)\n            } else if (typeof layer === 'function') {\n                layer(ctx, layerContext)\n            }\n        })\n\n        ctx.save()\n    }, [\n        axisBottom,\n        axisLeft,\n        axisRight,\n        axisTop,\n        barsWithValue,\n        borderRadius,\n        borderWidth,\n        boundAnnotations,\n        enableGridX,\n        enableGridY,\n        getBorderColor,\n        getLabel,\n        getLabelColor,\n        gridXValues,\n        gridYValues,\n        groupMode,\n        height,\n        innerHeight,\n        innerWidth,\n        layerContext,\n        layers,\n        layout,\n        legendsWithData,\n        margin.left,\n        margin.top,\n        outerHeight,\n        outerWidth,\n        pixelRatio,\n        renderBar,\n        xScale,\n        yScale,\n        reverse,\n        shouldRenderBarLabel,\n        theme,\n        width,\n        barTotals,\n        enableTotals,\n        formatValue,\n        computeLabelLayout,\n    ])\n\n    const handleMouseHover = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        ...bar.data,\n                        color: bar.color,\n                        label: bar.label,\n                        value: Number(bar.data.value),\n                    }),\n                    event\n                )\n\n                if (event.type === 'mouseenter') {\n                    onMouseEnter?.(bar.data, event)\n                }\n            } else {\n                hideTooltip()\n            }\n        },\n        [hideTooltip, margin, onMouseEnter, bars, showTooltipFromEvent, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            hideTooltip()\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar) {\n                onMouseLeave?.(bar.data, event)\n            }\n        },\n        [hideTooltip, margin, onMouseLeave, bars]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLCanvasElement>) => {\n            if (!bars) return\n            if (!canvasEl.current) return\n\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            const bar = findBarUnderCursor(bars, margin, x, y)\n\n            if (bar !== undefined) {\n                onClick?.({ ...bar.data, color: bar.color }, event)\n            }\n        },\n        [margin, onClick, bars]\n    )\n\n    return (\n        <canvas\n            ref={canvas => {\n                canvasEl.current = canvas\n                if (canvasRef && 'current' in canvasRef) canvasRef.current = canvas\n            }}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const BarCanvas = forwardRef(\n    <RawDatum extends BarDatum>(\n        { isInteractive, renderWrapper, theme, ...props }: BarCanvasProps<RawDatum>,\n        ref: ForwardedRef<HTMLCanvasElement>\n    ) => (\n        <Container {...{ isInteractive, renderWrapper, theme }} animate={false}>\n            <InnerBarCanvas<RawDatum> {...props} canvasRef={ref} />\n        </Container>\n    )\n)\n","import { Bar } from './Bar'\nimport { BarDatum, BarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport type ResponsiveBarSvgProps<RawDatum extends BarDatum> = Omit<\n    BarSvgProps<RawDatum>,\n    'height' | 'width'\n>\n\nexport const ResponsiveBar = <RawDatum extends BarDatum>(\n    props: ResponsiveBarSvgProps<RawDatum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Bar<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { BarDatum, BarCanvasProps } from './types'\nimport { BarCanvas } from './BarCanvas'\nimport { ForwardedRef, forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport type ResponsiveBarCanvasProps<RawDatum extends BarDatum> = Omit<\n    BarCanvasProps<RawDatum>,\n    'height' | 'width'\n>\n\nexport const ResponsiveBarCanvas = forwardRef(function ResponsiveBarCanvas<\n    RawDatum extends BarDatum\n>(props: ResponsiveBarCanvasProps<RawDatum>, ref: ForwardedRef<HTMLCanvasElement>) {\n    return (\n        <ResponsiveWrapper>\n            {({ width, height }) => (\n                <BarCanvas\n                    width={width}\n                    height={height}\n                    {...(props as Omit<BarCanvasProps<BarDatum>, 'height' | 'width'>)}\n                    ref={ref}\n                />\n            )}\n        </ResponsiveWrapper>\n    )\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}